{"version":3,"file":"static/js/266.c911e5e8.chunk.js","mappings":"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","sources":["layouts/BasicLayout.js","pages/lesson/LessonForm_img.js","util/cookieUtil.js","util/jwtUtil.js","api/memberApi.js","api/todoApi.js","slices/loginSlice.js"],"sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\nimport \"./BasicLayout.css\"\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logout} from \"../slices/loginSlice\";\n\nconst BasicLayout = ({children}) => {\n        const navigate = useNavigate();\n\n        const dispatch = useDispatch()\n\n        // const loginState = useSelector((state)=>state.login)\n       // const {doLogout, moveToPath} =useCustomLogin()\n       //  const userId = loginState.userId ? `Welcome, ${loginState.userId}` : 'Welcome';\n    const isLoggedIn = useSelector((state) => state.login.isLoggedIn);\n    const userId = useSelector((state) => state.login.userId);\n    const handleClickLogout =()=>{\n             localStorage.removeItem(\"isLoggedIn\");\n             // localStorage.removeItem(\"userId\");\n             dispatch(logout());\n             navigate(\"/\");\n         }\n\n    return(\n    <>\n    \n    <header>\n    <nav className=\"navbar navbar-expand-lg\" id=\"nav\" >\n    <div className=\"container-fluid\" id=\"nav-form\">\n      <a href={'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      < ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a href={'/about'} className=\"nav-link active\" aria-current=\"page\" >About Us</a>\n        </li>\n\n          {/*   !가 붙어있어야 로그인전 화면에 노출 ! */}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n          <>\n        <li className=\"nav-item\">\n          <a href={'/myPage'} className=\"nav-link\">My Page</a>\n        </li>\n       </>\n        :<></>}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickLogout}>Logout</a>\n                  </li>\n               </>\n              :<></>}\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n          <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" >{userId}님, 반가워요!</a>\n          </li>\n              </>\n              :<></>}\n\n        {/* 로그인 전 사용자에게 '로그인' 보이게 */}\n          {! isLoggedIn ?\n              <>\n        <li className=\"nav-item\">\n          <a href=\"/user/login\" className=\"nav-link\" >Login</a>\n        </li>\n              </>: <></>}\n\n\n\n              {/*<li className=\"nav-item\">*/}\n              {/*    <a href=\"/user/login\" className=\"nav-link active\" aria-current=\"page\">{`Welcome, ${userId}`}</a>*/}\n              {/*</li>*/}\n\n\n\n\n      </ul>\n      <form className=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">Search</button>\n      </form>\n    </div>\n  </div>\n </nav>\n <hr/>\n    </header>\n\n\n          <main>\n            {children}\n          </main>\n\n    <footer>\n    <hr/>\n      <div className=\"footer-body\">\n        <span><b>(주)원데이씨드</b> <br/>\n        <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br/>\n         사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br/>\n         </span> <br/>\n         <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\n        </span>\n        <br/><br/><br/><br/>\n      </div>   \n    </footer>\n\n\n    </>\n\n  )\n}\nexport default BasicLayout;","import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport BasicLayout from \"../../layouts/BasicLayout\"\nimport axios from 'axios';\n\nfunction LessonForm() {\n  const [lessonName, setLessonName] = useState(\"\");\n  const [lessonCategory, setLessonCategory] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [lessonLimited, setLessonLimited] = useState(\"\");\n  const [lessonSchedule, setLessonSchedule] = useState();\n  const [lessonStatus, setLessonStatus] = useState(\"\");\n  const [lessonRepImg, setLessonRepImg] = useState(null);\n  const [lessonDetailImg, setLessonDetailImg] = useState(null);\n\n  const handleInputChange = (e, setValue) => {\n    // input의 현재 값에 접근\n    const inputValue = e.target.value;\n    console.log(\"입력값 불러: \", inputValue)\n    // 상태 업데이트\n    setValue(inputValue);\n  };\n\n  const handleFileChange = (e, setFile) => {\n    // 파일 선택 시\n    const file = e.target.files;\n    console.log(\"파일 이름 불러\", file)\n\n    // 상태 업데이트\n    setFile(file);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('lessonName', lessonName);\n    formData.append('lessonCategory', lessonCategory);\n    formData.append('price', price);\n    formData.append('lessonLimited', lessonLimited);\n    formData.append('lessonSchedule', lessonSchedule);\n    formData.append('lessonStatus', lessonStatus);\n    formData.append('lessonRepImg', lessonRepImg);\n    formData.append('lessonDetailImg', lessonDetailImg);\n\n\n\n    console.log(\"진짜 개짜증나네: \", formData)\n    axios.post('/api/lesson/new', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n      .then(response => {\n        console.log('서버로부터의 응답:', response.data);\n      })\n      .catch(error => {\n        console.error('에러 발생:', error);\n      });\n  }\n\n  // const handleFileChange = (e) => {\n  //   e.preventDefault();\n\n  //   const formData = new FormData();\n  //   formData.append('lessonRepImg', lessonRepImg);\n  //   formData.append('lessonDetailImg', lessonDetailImg);\n\n  //   axios.post('/api/lesson/new', formData, {\n  //     headers: {\n  //       'Content-Type': 'multipart/form-data',\n  //     },\n  //   })\n  //     .then(response => {\n  //       console.log('서버로부터의 응답:', response.data);\n  //     })\n  //     .catch(error => {\n  //       console.error('에러 발생:', error);\n  //     });\n  // };\n\n  return (\n    <div>\n      <BasicLayout>\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n\n          <form onSubmit={handleSubmit} encType='multipart/form-data'>\n            <h1>클래스 등록 페이지입니다</h1><br></br>\n            <div>\n              <label>\n                <h4>클래스 이름</h4>\n                <input onChange={(e) => handleInputChange(e, setLessonName)} placeholder='제목을 입력해 주세요.' required />\n              </label>\n              <hr />\n            </div>\n\n            <div>\n              <label>\n                <h4>카테고리</h4>\n                <input type='radio' value='cook' name='category' onChange={(e) => handleInputChange(e, setLessonCategory)} />\n                요리\n              </label>\n              <label>\n                <input type='radio' value='art' name='category' onChange={(e) => handleInputChange(e, setLessonCategory)} required />\n                미술\n              </label>\n              <label>\n                <input type='radio' value='music' name='category' onChange={(e) => handleInputChange(e, setLessonCategory)} />\n                음악\n              </label><br />\n              <label>\n                <input type='radio' value='sport' name='category' onChange={(e) => handleInputChange(e, setLessonCategory)} />\n                운동\n              </label>\n              <label>\n                <input type='radio' value='baking' name='category' onChange={(e) => handleInputChange(e, setLessonCategory)} />\n                베이킹\n              </label><br />\n              <hr />\n            </div>\n\n            <div>\n              <label>\n                <h4>클래스 가격</h4>\n                <input type='number' onChange={(e) => handleInputChange(e, setPrice)} placeholder='숫자만 입력해 주세요.' required /><br />\n              </label>\n              <hr />\n            </div>\n\n            <div>\n              <label>\n                <h4>제한 인원</h4>\n                <input type='number' onChange={(e) => handleInputChange(e, setLessonLimited)} placeholder='숫자만 입력해 주세요.' required /><br />\n              </label>\n              <hr />\n            </div>\n\n            <div>\n              <label>\n                <h4>클래스 시작일</h4>\n                <input type='date' onChange={(e) => handleInputChange(e, setLessonSchedule)} required /><br />\n              </label>\n              <hr />\n            </div>\n\n            <div>\n              <label>\n                <h4>판매 상태</h4>\n                <select onChange={(e) => handleInputChange(e, setLessonStatus)} defaultValue=\"\" required>\n                  <option value=\"\" disabled>선택</option>\n                  <option value='SELL'>판매중</option>\n                  <option value='SOLD_OUT'>품절</option>\n                </select><br />\n                <hr />\n              </label>\n            </div>\n\n            <div>\n              <label>\n                <h4>이미지 등록</h4>\n                - 썸네일 사진<br />\n                <input type='file' name='lessonRepImg' onChange={(e) => handleFileChange(e, setLessonRepImg)} defaultValue=\"\" /><br />\n              </label>\n              <label>\n                - 상세 설명 사진<br />\n                <input type='file' name='lessonDetailImg' onChange={(e) => handleFileChange(e, setLessonDetailImg)} defaultValue=\"\" />\n              </label>\n            </div>\n            <br />\n\n            <button type='submit'>저장</button>\n\n          </form>\n        </div>\n      </BasicLayout>\n    </div>\n\n  )\n\n}\n\nexport default LessonForm;","import {Cookies} from \"react-cookie\";\n\n\nconst cookies = new Cookies()\nexport const setCookie =(name,value,days) =>{\n    const expires = new Date()\n    expires.setUTCDate(expires.setUTCDate()+days)//보관기한\n\n    return cookies.set(name,value,{path:'/',expires:expires})\n}\n\nexport const getCookie = (name) =>{\n    return cookies.get(name)\n}\n\nexport const removeCookie = (name, path=\"/\")=>{\n    cookies.remove(name, {path})\n}\n","import axios from \"axios\";\nimport {getCookie} from \"./cookieUtil\";\nimport {API_SERVER_HOST} from \"../api/todoApi\";\n\nconst jwtAxios = axios.create()\nconst refreshJWT = async (accessToken, refreshToken) =>{\n    const host = API_SERVER_HOST\n    const header = {headers:{\"Authorization\":`Bearer ${accessToken}`}}\n\n    const res = await axios.get(`${host}/api/user/refresh?refreshToken=${refreshToken}`,header)\n\n    console.log(\"------------------------\")\n    console.log(res.data)\n\n    return res.data\n\n}\n\n//before request\nconst beforeReq = (config) =>{\n    console.log(\"before Request...\")\n\n    const memberInfo = getCookie(\"member\")\n\n    if(!memberInfo){\n        console.log(\"member not found\")\n        return Promise.reject({\n            response:\n                {data:{\n                    error:\"REQUIRE_LOGIN\"\n                    }}}\n        )\n    }\n\n    const {accessToken}=memberInfo\n\n    //Authorization 헤더처리\n    config.headers.Authorization = `Bearer ${accessToken}`\n\n    return config\n}\n\n\n//fail request\nconst requestFail = (err) =>{\n    console.log(\"request error\")\n\n    return Promise.reject(err)\n}\n\n//before return response\nconst beforeRes = async (res) =>{\n    console.log(\"before return response....\")\n\n    return res\n}\n\n//fail response\nconst responseFail = (err) =>{\n    console.log(\"response fail error.....\")\n    return Promise.reject(err)\n}\n\njwtAxios.interceptors.request.use(beforeReq,requestFail)\njwtAxios.interceptors.request.use(beforeRes,responseFail)\nexport default jwtAxios\n\n","import {API_SERVER_HOST} from \"./todoApi\"\nimport jwtAxios from \"../util/jwtUtil\";\n\nconst host = `${API_SERVER_HOST}/api/user/login`\nexport const loginPost = async (loginParam) =>{\n    const header = {headers: {\"ContextType\":\"x-www-form-urlencoded\"}}\n\n    const form = new FormData()\n    form.append(\"userId\",loginParam.userId)\n    form.append(\"userPassword\",loginParam.userPassword)\n\n    const res = await jwtAxios.post(`${host}`, form, header)\n\n    return res.data\n}","import axios from \"axios\";\nexport const API_SERVER_HOST = 'http://localhost:8080'\n\n// const prefix = `${API_SERVER_HOST}/api`\n\n// export const getOne = async(tno)=>{\n//     const res = await axios.get(`${prefix}/${tno}`)\n//\n//      return res.data\n\n//p.131\n// }","import {createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\nimport {loginPost} from \"../api/memberApi\";\nimport {getCookie, removeCookie, setCookie} from \"../util/cookieUtil\";\n\nexport const loginSlice = createSlice({\n    name: 'login',\n    initialState: {\n        isLoggedIn: false,\n        userId: null,\n    },\n    reducers: {\n        login: (state, action) => {\n            state.isLoggedIn = true;\n            state.userId = action.payload.userId;\n            // 로그인 성공 시 로컬 스토리지에 로그인 상태 저장\n            localStorage.setItem('isLoggedIn', true);\n\n        },\n        logout: (state) => {\n            state.isLoggedIn = false;\n            state.userId = null;\n            // 로그아웃 시 로컬 스토리지에서 로그인 상태 제거\n            localStorage.removeItem('isLoggedIn');\n        },\n    },\n});\n\nexport const { login, logout } = loginSlice.actions;\n\nexport default loginSlice.reducer;\n\n\n\n\n// const initState ={\n//     userId:''\n// }\n// // const loadMemberCookie = () =>{\n// //     const memberinfo =getCookie(\"user\")\n// //\n// //     if(memberinfo && memberinfo.cookieName){\n// //     memberinfo.cookieName = decodeURIComponent(memberinfo.cookieName)\n// //     }\n// //     return memberinfo\n// // }\n//\n// // export const loginPostAsync = createAsyncThunk('loginPostAsync',(param)=>{\n// //     return loginPost(param)\n// // })\n// const loginSlice = createSlice({\n//     name :'LoginSlice',\n//     // initialState : loadMemberCookie() || initState, //쿠키가 없다면 초깃값 사용\n//     initialState : initState, //쿠키가 없다면 초깃값 사용\n//     reducers : {\n//         login:(state, action) =>{\n//             console.log(\"login!\")\n//\n//             //{userId,userPassword}\n//             const data = action.payload\n//\n//             //새로운 상태\n//             return{userId: data.userId}\n//         },\n//         logout:(state,action)=>{\n//             console.log(\"logout!\")\n//\n//             // removeCookie(\"member\")\n//             return {...initState}\n//         }\n//     },\n//     // extraReducers:(builder) =>{\n//     //     builder.addCase(loginPostAsync.fulfilled,(state,action)=>{\n//     //         console.log(\"fulfilled\")\n//     //\n//     //         const payload = action.payload\n//     //\n//     //         //정상적인 로그인 시점에만\n//     //         if(!payload.error){\n//     //             setCookie(\"user\",JSON.stringify(payload),1)//1일 = RefreshToken\n//     //         }\n//     //         return payload\n//     //     })\n//     //         .addCase(loginPostAsync.pending, (state,action) =>{\n//     //             console.log(\"pending\")\n//     //         })\n//     //         .addCase(loginPostAsync.rejected,(state,action)=>{\n//     //             console.log(\"rejected\")\n//     //         })\n//     // }\n// })\n// export const {login, logout} = loginSlice.actions\n// export default loginSlice.reducer"],"names":["_ref","children","navigate","useNavigate","dispatch","useDispatch","isLoggedIn","useSelector","state","login","userId","_jsxs","_Fragment","_jsx","className","id","href","type","onClick","handleClickLogout","localStorage","removeItem","logout","role","placeholder","lessonName","setLessonName","useState","lessonCategory","setLessonCategory","price","setPrice","lessonLimited","setLessonLimited","lessonSchedule","setLessonSchedule","lessonStatus","setLessonStatus","lessonRepImg","setLessonRepImg","lessonDetailImg","setLessonDetailImg","handleInputChange","e","setValue","inputValue","target","value","console","log","handleFileChange","setFile","file","files","BasicLayout","style","display","justifyContent","alignItems","height","onSubmit","preventDefault","formData","FormData","append","axios","post","headers","then","response","data","catch","error","encType","onChange","required","name","defaultValue","disabled","cookies","Cookies","jwtAxios","create","interceptors","request","use","config","memberInfo","get","Promise","reject","accessToken","Authorization","concat","err","async","res","loginSlice","createSlice","initialState","reducers","action","payload","setItem","actions"],"sourceRoot":""}