{"version":3,"file":"static/js/348.f7c45974.chunk.js","mappings":"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","sources":["layouts/BasicLayout.js","pages/order/Order.js"],"sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\nimport \"./BasicLayout.css\"\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logout} from \"../slices/loginSlice\";\nimport { hostLogout }from \"../slices/hostLoginSlice\";\nimport {useState} from \"react\";\n\nconst BasicLayout = ({children}) => {\n\n        const navigate = useNavigate();\n        const dispatch = useDispatch()\n\n        const isLoggedIn = useSelector((state) => state.login.isLoggedIn);\n        const userId = useSelector((state) => state.login.userId);\n        const userName = useSelector((state) => state.login.userName);\n        // const userName22 = localStorage.getItem(\"userName\");\n\n        const isHostLoggedIn = useSelector((state) => state.hostLogin.isHostLoggedIn);\n        const hostNum = useSelector((state) => state.hostLogin.hostNum);\n        const hostName = useSelector((state) => state.hostLogin.hostName);\n\n        const [searchValue, setSearchValue] = useState(\"\");\n\n        const handleClickLogout =()=>{\n             localStorage.removeItem(\"isLoggedIn\");\n             dispatch(logout());\n             navigate(\"/\");\n         }\n\n    const handleClickHostLogout =()=>{\n        localStorage.removeItem(\"isHostLoggedIn\");\n        dispatch(hostLogout());\n        navigate(\"/\");\n    }\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        if (!searchValue.trim()) {\n            alert('검색어를 입력해주세요.');\n            return;\n        }\n        navigate(`/lesson/list?q=${searchValue.trim()}`);\n    };\n\n    return(\n    <>\n    \n    <header>\n    <nav className=\"navbar navbar-expand-lg\" id=\"nav\" >\n    <div className=\"container-fluid\" id=\"nav-form\">\n      <a href={'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      < ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a href={'/about'} className=\"nav-link active\" aria-current=\"page\" >About Us</a>\n        </li>\n\n\n\n          {/*   !가 붙어있어야 로그인전 화면에 노출 ! */}\n\n\n\n          {/* User */}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n          <>\n        <li className=\"nav-item\">\n          <a href={'/myPage'} className=\"nav-link\">My Page</a>\n        </li>\n       </>\n        :<></>}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickLogout}>Logout</a>\n                  </li>\n               </>\n              :<></>}\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n          <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" >\n                  {userId}님, 반가워요!\n              </a>\n          </li>\n              </>\n              :<></>}\n\n        {/* 로그인 전 사용자에게 '로그인' 보이게 */}\n          {( !isLoggedIn  &&  !isHostLoggedIn )?\n              <>\n        <li className=\"nav-item\">\n          <a href=\"/user/login\" className=\"nav-link\" >Login</a>\n        </li>\n              </>: <></>}\n\n\n          {/* Host */}\n\n\n\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href={'/host/myPage'} className=\"nav-link\">My Page</a>\n                  {/*    레슨 파일보고 페이지 맞게 연결*/}\n                  </li>\n              </>\n              :<></>}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          {/*{ isHostLoggedIn ?*/}\n          {/*    <>*/}\n          {/*        <li className=\"nav-item\">*/}\n          {/*            <a href={'/lesson/main'} className=\"nav-link\">My Class</a>*/}\n          {/*            /!*    레슨 파일보고 페이지 맞게 연결*!/*/}\n          {/*        </li>*/}\n          {/*    </>*/}\n          {/*    :<></>}*/}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickHostLogout}>Logout</a>\n                  </li>\n              </>\n              :<></>}\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a className=\"nav-link active\" aria-current=\"page\" >{hostNum}님, 반가워요!</a>\n                  </li>\n           </>\n              :<></>}\n\n\n      </ul>\n      <form className=\"d-flex\" role=\"search\" onSubmit={handleSearch}>\n        <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" value={searchValue} onChange={(e) => setSearchValue(e.target.value)}/>\n        <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">Search</button>\n      </form>\n    </div>\n  </div>\n </nav>\n <hr/>\n    </header>\n\n\n          <main>\n            {children}\n          </main>\n\n    <footer>\n    <hr/>\n      <div className=\"footer-body\">\n        <span><b>(주)원데이씨드</b> <br/>\n        <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br/>\n         사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br/>\n         </span> <br/>\n         <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\n        </span>\n        <br/><br/><br/><br/>\n      </div>   \n    </footer>\n\n\n    </>\n\n  )\n}\nexport default BasicLayout;","import React, {Component, useEffect, useState} from \"react\";\nimport './order.css'\nimport BasicLaylout from \"../../layouts/BasicLayout\";\nimport axios from \"axios\";\n\nfunction OrderPage() {\n\n    const [orderItems, setOrderItems] = useState([]);\n\n    // 조회\n    useEffect(() => {\n        const fetchOrderList = async () => {\n          try {\n            const response = await axios.get('/api/orders');\n            setOrderItems(response.data);\n          } catch (error) {\n            console.error('Error fetching order list:', error);\n          }\n        };\n\n        fetchOrderList();\n      }, []);\n\n    // 구매 취소\n    const cancelHandler = async (orderId, lessonName) => {\n        if(window.confirm(`'${lessonName}' 수업을 취소하시겠습니까?`)) {\n            try{await axios.post(`/api/orders/${orderId}`);\n            alert(\"수업이 취소되었습니다.\");\n            window.location.reload();\n        } catch (error) {\n            if (error.response) {\n                console.error(error.response.data);\n              } else {\n                console.error(\"Error during the request\");\n              }\n              alert(\"취소 중 오류가 발생했습니다.\");\n            }\n        } else {\n            window.location.reload();\n        }\n    };\n\n\n    // 구매 취소\n    // const cancelHandler= async (orderId)=>{\n    //     try{\n    //         await axios.delete(`/api/order/${orderId}`,{status:\"구매 취소\"});\n    //         setCancelledOrders(new Set([...cancelledOrders, orderId]));\n    //     }catch (error) {\n    //         console.error('Error canceling order:', error);\n    //     }\n    // }\n\n\n        return (\n            <div>\n                <BasicLaylout>\n                <div className=\"purchaseBox\">\n                    <h1>구매내역</h1>\n                    <hr/>\n                    {orderItems.map((orders) => (\n                        <div key={orders.orderId} className=\"orderItem\">\n                        <div className=\"class-img class-info\"></div>\n                        <h3 className=\"class-name\">{orders.lessonName}</h3>\n                        <span className=\"class-date\">{orders.lessonSchedule}</span>\n                        <span className=\"class-count\">결제 금액: {orders.orderPrice}</span>\n                        <span className=\"class-count\">구매 수량: {orders.count}</span>\n                        <button className=\"class-status\" onClick={() => cancelHandler(orders.orderId, orders.lessonName)}>\n                            {orders.orderStatus === 'ORDER' ? '구매 완료' : '구매 취소 완료'}</button>\n                        </div>\n                    ))}\n                </div>\n                </BasicLaylout>\n            </div>\n        )\n\n}\nexport default OrderPage;"],"names":["_ref","children","navigate","useNavigate","dispatch","useDispatch","isLoggedIn","useSelector","state","login","userId","isHostLoggedIn","userName","hostLogin","hostNum","searchValue","setSearchValue","hostName","useState","_jsxs","_Fragment","_jsx","className","id","href","type","onClick","handleClickLogout","localStorage","removeItem","logout","handleClickHostLogout","hostLogout","role","onSubmit","e","preventDefault","trim","concat","alert","placeholder","value","onChange","target","orderItems","setOrderItems","useEffect","async","response","axios","get","data","error","console","fetchOrderList","BasicLaylout","map","orders","lessonName","lessonSchedule","orderPrice","count","orderId","window","confirm","post","location","reload","cancelHandler","orderStatus"],"sourceRoot":""}