{"version":3,"file":"static/js/348.8f4935f0.chunk.js","mappings":"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","sources":["layouts/BasicLayout.js","pages/order/Order.js"],"sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\nimport \"./BasicLayout.css\"\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logout} from \"../slices/loginSlice\";\nimport { hostLogout }from \"../slices/hostLoginSlice\";\nimport {useState} from \"react\";\n\nconst BasicLayout = ({children}) => {\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch()\n\n    const isLoggedIn = useSelector((state) => state.login.isLoggedIn);\n    const userId = useSelector((state) => state.login.userId);\n    const userName = useSelector((state) => state.login.userName);\n    // const userName22 = localStorage.getItem(\"userName\");\n\n    const isHostLoggedIn = useSelector((state) => state.hostLogin.isHostLoggedIn);\n    const hostNum = useSelector((state) => state.hostLogin.hostNum);\n    const hostName = useSelector((state) => state.hostLogin.hostName);\n\n    const [searchValue, setSearchValue] = useState(\"\");\n\n    const handleClickLogout =()=>{\n        localStorage.removeItem(\"isLoggedIn\");\n        dispatch(logout());\n        navigate(\"/\");\n    }\n\n    const handleClickHostLogout =()=>{\n        localStorage.removeItem(\"isHostLoggedIn\");\n        dispatch(hostLogout());\n        navigate(\"/\");\n    }\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        if (!searchValue.trim()) {\n            alert('검색어를 입력해주세요.');\n            return;\n        }\n        navigate(`/lesson/list?q=${searchValue.trim()}`);\n    };\n\n    return(\n        <>\n\n            <header>\n                <nav className=\"navbar navbar-expand\" id=\"nav\" >\n                    <div className=\"container-fluid\" id=\"nav-form\">\n                        <a href={'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</a>\n                        {/* <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button> */}\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                            < ul className=\"navbar-nav me-auto mb-lg-0 \">\n                                {/*  ul: mb-2 */}\n                                <li className=\"nav-item\">\n                                    <a href={'/about'} className=\"nav-link active \" aria-current=\"page\" >About Us</a>\n                                </li>\n\n                                {/*   !가 붙어있어야 로그인전 화면에 노출 ! */}\n\n                                {/* User */}\n\n                                {/*로그인한 사용자에게만 보이게*/}\n                                { isLoggedIn ?\n                                    <>\n                                        <li className=\"nav-item\">\n                                            <a href={'/myPage'} className=\"nav-link\">My Page</a>\n                                        </li>\n                                    </>\n                                    :<></>}\n\n                                {/*로그인한 사용자에게만 보이게*/}\n                                { isLoggedIn ?\n                                    <>\n                                        <li className=\"nav-item\">\n                                            <a href=\"/\" className=\"nav-link\" onClick={handleClickLogout}>Logout</a>\n                                        </li>\n                                    </>\n                                    :<></>}\n                                {/*로그인한 사용자에게만 보이게*/}\n                                { isLoggedIn ?\n                                    <>\n                                        <li className=\"nav-item\">\n                                            <a className=\"nav-link active\" aria-current=\"page\" >\n                                                {userId}님, 반가워요!\n                                            </a>\n                                        </li>\n                                    </>\n                                    :<></>}\n\n                                {/* 로그인 전 사용자에게 '로그인' 보이게 */}\n                                {( !isLoggedIn  &&  !isHostLoggedIn )?\n                                    <>\n                                        <li className=\"nav-item\">\n                                            <a href=\"/user/login\" className=\"nav-link\" >Login</a>\n                                        </li>\n                                    </>: <></>}\n\n\n                                {/* Host */}\n\n\n\n                                {/*로그인한 호스트에게만 보이게*/}\n                                { isHostLoggedIn ?\n                                    <>\n                                        <li className=\"nav-item\">\n                                            <a href={'/host/myPage'} className=\"nav-link\">My Page</a>\n                                            {/*    레슨 파일보고 페이지 맞게 연결*/}\n                                        </li>\n                                    </>\n                                    :<></>}\n\n                                {/*로그인한 호스트에게만 보이게*/}\n                                { isHostLoggedIn ?\n                                    <>\n                                        <li className=\"nav-item\">\n                                            <a href=\"/\" className=\"nav-link\" onClick={handleClickHostLogout}>Logout</a>\n                                        </li>\n                                    </>\n                                    :<></>}\n                                {/*로그인한 호스트에게만 보이게*/}\n                                { isHostLoggedIn ?\n                                    <>\n                                        <li className=\"nav-item\">\n                                            <a className=\"nav-link active\" aria-current=\"page\" >{hostNum}님, 반가워요!</a>\n                                        </li>\n                                    </>\n                                    :<></>}\n\n                            </ul>\n                            <form className=\"d-flex\" role=\"search\" onSubmit={handleSearch}>\n                                <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\"  aria-label=\"Search\" value={searchValue} onChange={(e) => setSearchValue(e.target.value)}/>\n                                <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">검색</button>\n                            </form>\n                        </div>\n                    </div>\n                </nav>\n                <hr/>\n            </header>\n\n            <main>\n                {children}\n            </main>\n\n            <footer>\n                <hr/>\n                <div className=\"footer-body\">\n        <span><b>(주)원데이씨드</b> <br/>\n        <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br/>\n         사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br/>\n         </span> <br/>\n         <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\n        </span>\n                    <br/><br/><br/><br/>\n                </div>\n            </footer>\n\n\n        </>\n\n    )\n}\nexport default BasicLayout;","import React, {Component, useEffect, useState} from \"react\";\nimport './order.css'\nimport BasicLaylout from \"../../layouts/BasicLayout\";\nimport axios from \"axios\";\n\nfunction OrderPage() {\n\n    const [orderItems, setOrderItems] = useState([]);\n\n    // 조회\n    useEffect(() => {\n        const fetchOrderList = async () => {\n            try {\n                const response = await axios.get('/api/orders');\n                setOrderItems(response.data);\n            } catch (error) {\n                console.error('Error fetching order list:', error);\n            }\n        };\n\n        fetchOrderList();\n    }, []);\n\n    // 구매 취소\n    const cancelHandler = async (orderId, lessonName) => {\n        if(window.confirm(`'${lessonName}' 수업을 취소하시겠습니까?`)) {\n            try{await axios.post(`/api/orders/${orderId}`);\n                alert(\"수업이 취소되었습니다.\");\n                window.location.reload();\n            } catch (error) {\n                if (error.response) {\n                    console.error(error.response.data);\n                } else {\n                    console.error(\"Error during the request\");\n                }\n                alert(\"취소 중 오류가 발생했습니다.\");\n            }\n        } else {\n            window.location.reload();\n        }\n    };\n\n\n    // 구매 취소\n    // const cancelHandler= async (orderId)=>{\n    //     try{\n    //         await axios.delete(`/api/order/${orderId}`,{status:\"구매 취소\"});\n    //         setCancelledOrders(new Set([...cancelledOrders, orderId]));\n    //     }catch (error) {\n    //         console.error('Error canceling order:', error);\n    //     }\n    // }\n\n\n    return (\n        <div>\n            <BasicLaylout>\n                <div className=\"purchaseBox\">\n                    <h1 id=\"title\"><b>구매내역</b></h1>\n\n                    {orderItems.map((orders) => (\n                        <div key={orders.orderId} className=\"orderItem\">\n                            <div className=\"class-img class-info\"></div>\n                            <h3 className=\"class-name\">{orders.lessonName}</h3>\n                            <span className=\"class-date\">{orders.lessonSchedule}</span>\n                            <span className=\"class-count\">결제 금액: {orders.orderPrice}</span>\n                            <span className=\"class-count\">구매 수량: {orders.count}</span>\n                            <button className=\"class-status\" onClick={() => cancelHandler(orders.orderId, orders.lessonName)}>\n                                {orders.orderStatus === 'ORDER' ? '구매 취소 하기' : '구매 취소 완료'}</button>\n                        </div>\n                    ))}\n                </div>\n            </BasicLaylout>\n        </div>\n    )\n\n}\nexport default OrderPage;"],"names":["_ref","children","navigate","useNavigate","dispatch","useDispatch","isLoggedIn","useSelector","state","login","userId","isHostLoggedIn","userName","hostLogin","hostNum","searchValue","setSearchValue","hostName","useState","_jsxs","_Fragment","_jsx","className","id","href","onClick","handleClickLogout","localStorage","removeItem","logout","handleClickHostLogout","hostLogout","role","onSubmit","e","preventDefault","trim","concat","alert","type","value","onChange","target","orderItems","setOrderItems","useEffect","async","response","axios","get","data","error","console","fetchOrderList","BasicLaylout","map","orders","lessonName","lessonSchedule","orderPrice","count","orderId","window","confirm","post","location","reload","cancelHandler","orderStatus"],"sourceRoot":""}