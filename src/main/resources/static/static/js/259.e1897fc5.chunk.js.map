{"version":3,"file":"static/js/259.e1897fc5.chunk.js","mappings":"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","sources":["layouts/BasicLayout.js","pages/lesson/LessonDetail.js"],"sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\nimport \"./BasicLayout.css\"\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logout} from \"../slices/loginSlice\";\nimport { hostLogout }from \"../slices/hostLoginSlice\";\n\nconst BasicLayout = ({children}) => {\n\n        const navigate = useNavigate();\n        const dispatch = useDispatch()\n\n        const isLoggedIn = useSelector((state) => state.login.isLoggedIn);\n        const userId = useSelector((state) => state.login.userId);\n        const userName = useSelector((state) => state.login.userName);\n        // const userName22 = localStorage.getItem(\"userName\");\n\n        const isHostLoggedIn = useSelector((state) => state.hostLogin.isHostLoggedIn);\n        const hostNum = useSelector((state) => state.hostLogin.hostNum);\n        const hostName = useSelector((state) => state.hostLogin.hostName);\n\n        const handleClickLogout =()=>{\n             localStorage.removeItem(\"isLoggedIn\");\n             dispatch(logout());\n             navigate(\"/\");\n         }\n\n    const handleClickHostLogout =()=>{\n        localStorage.removeItem(\"isHostLoggedIn\");\n        dispatch(hostLogout());\n        navigate(\"/\");\n    }\n\n    return(\n    <>\n    \n    <header>\n    <nav className=\"navbar navbar-expand-lg\" id=\"nav\" >\n    <div className=\"container-fluid\" id=\"nav-form\">\n      <a href={'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      < ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a href={'/about'} className=\"nav-link active\" aria-current=\"page\" >About Us</a>\n        </li>\n\n\n\n          {/*   !가 붙어있어야 로그인전 화면에 노출 ! */}\n\n\n\n          {/* User */}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n          <>\n        <li className=\"nav-item\">\n          <a href={'/myPage'} className=\"nav-link\">My Page</a>\n        </li>\n       </>\n        :<></>}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickLogout}>Logout</a>\n                  </li>\n               </>\n              :<></>}\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n          <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" >\n                  {userName}님, 반가워요!\n              </a>\n          </li>\n              </>\n              :<></>}\n\n        {/* 로그인 전 사용자에게 '로그인' 보이게 */}\n          {( !isLoggedIn  &&  !isHostLoggedIn )?\n              <>\n        <li className=\"nav-item\">\n          <a href=\"/user/login\" className=\"nav-link\" >Login</a>\n        </li>\n              </>: <></>}\n\n\n          {/* Host */}\n\n\n\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href={'/host/myPage'} className=\"nav-link\">My Page</a>\n                  {/*    레슨 파일보고 페이지 맞게 연결*/}\n                  </li>\n              </>\n              :<></>}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          {/*{ isHostLoggedIn ?*/}\n          {/*    <>*/}\n          {/*        <li className=\"nav-item\">*/}\n          {/*            <a href={'/lesson/main'} className=\"nav-link\">My Class</a>*/}\n          {/*            /!*    레슨 파일보고 페이지 맞게 연결*!/*/}\n          {/*        </li>*/}\n          {/*    </>*/}\n          {/*    :<></>}*/}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickHostLogout}>Logout</a>\n                  </li>\n              </>\n              :<></>}\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a className=\"nav-link active\" aria-current=\"page\" >{hostName}님, 반가워요!</a>\n                  </li>\n           </>\n              :<></>}\n\n\n      </ul>\n      <form className=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">Search</button>\n      </form>\n    </div>\n  </div>\n </nav>\n <hr/>\n    </header>\n\n\n          <main>\n            {children}\n          </main>\n\n    <footer>\n    <hr/>\n      <div className=\"footer-body\">\n        <span><b>(주)원데이씨드</b> <br/>\n        <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br/>\n         사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br/>\n         </span> <br/>\n         <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\n        </span>\n        <br/><br/><br/><br/>\n      </div>   \n    </footer>\n\n\n    </>\n\n  )\n}\nexport default BasicLayout;","import React, { useEffect, useState } from 'react';\nimport BasicLayout from \"../../layouts/BasicLayout\"\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction LessonDetail() {\n  const location = useLocation();\n  const [lessonDetail, setLessonDetail] = useState({});\n  const lessonId = location.state ? location.state.lessonId : null;\n  const [numberOfStudents, setNumberOfStudents] = useState(1);\n\n  // 조회\n  useEffect(() => {\n    const fetchLesson = async () => {\n      try {\n        // lessonId가 존재하는 경우에만 서버에 요청\n        if (lessonId) {\n          const response = await axios.get(`/user/lesson/detail/${lessonId}`);\n          setLessonDetail(response.data);\n        } else {\n          console.error('lessonId가 없습니다.');\n        }\n      } catch (error) {\n        console.error('에러 발생:', error);\n      }\n    };\n\n    fetchLesson();\n  }, [lessonId]);\n\n  // 인원수 저장\n  const handleInputChange = (e) => {\n    const value = parseInt(e.target.value, 10);\n    if (!isNaN(value) && value >= 1) {\n      setNumberOfStudents(value);\n    }\n  };\n\n  // 장바구니\n  const handleAddToCart = async () => {\n    try {\n      // 서버에 POST 요청 보내기\n      await axios.post('/api/addCart', {\n        count: numberOfStudents,\n        lessonId: lessonDetail.lessonId,\n      });\n\n      // 장바구니에 담기 성공 메시지 또는 다른 처리\n      console.log('장바구니에 담기 성공!');\n      alert(\"장바구니에 담겼습니다.\");\n      window.location.reload();\n    } catch (error) {\n      console.error('장바구니에 담기 실패:', error);\n      alert(\"장바구니에 담는 중 오류가 발생했습니다\");\n      window.location.reload();\n    }\n  };\n\n  return (\n    <div>\n\n      <BasicLayout>\n        <hr />\n        <form action=\"/cart\" method=\"get\">\n          <fieldset style={{ textAlign: \"center\" }}>\n            <img style={{ width: \"600px\", height: \"600px\" }} src=\"/boonga.jpg\" width=\"800\" />\n            <p>\n              <label className='btn' htmlFor=\"classTitle\">- 클래스 제목 : </label>\n              {lessonDetail.lessonName}<br />\n            </p>\n\n            <p >\n              <label className='btn' htmlFor=\"classStartDay\">- 클래스 시작일 : </label>\n              {lessonDetail.lessonSchedule}<br />\n            </p>\n\n            <p>\n              <label htmlFor=\"classStudentNum\">- 인원 : &nbsp;</label>\n              <input value={numberOfStudents} className='styled-input' type='number' id='classStudentNum' onChange={handleInputChange} min='1'></input>\n            </p>\n\n            <p>\n              <label className='btn' htmlFor=\"classCost\">- 클래스 가격 : </label>\n              {lessonDetail.price}<br />\n            </p>\n\n            <button className='btn w-btn-indigo-outline w-btn-green styled-input' type=\"button\" onClick={handleAddToCart}>\n              CART\n            </button>\n          </fieldset>\n          <hr />\n          <div style={{ textAlign: \"center\" }}>\n            <img src=\"/boonga2.jpeg\" width=\"800\" />\n            <br />\n            <img src=\"/boonga3.jpeg\" width=\"800\" />\n          </div>\n        </form>\n      </BasicLayout>\n    </div>\n\n  )\n\n}\n\nexport default LessonDetail;"],"names":["_ref","children","navigate","useNavigate","dispatch","useDispatch","isLoggedIn","useSelector","state","login","userName","userId","isHostLoggedIn","hostLogin","hostName","hostNum","_jsxs","_Fragment","_jsx","className","id","href","type","onClick","handleClickLogout","localStorage","removeItem","logout","handleClickHostLogout","hostLogout","role","placeholder","location","useLocation","lessonDetail","setLessonDetail","useState","lessonId","numberOfStudents","setNumberOfStudents","useEffect","async","response","axios","get","concat","data","console","error","fetchLesson","BasicLayout","action","method","style","textAlign","width","height","src","htmlFor","lessonName","lessonSchedule","value","onChange","e","parseInt","target","isNaN","min","price","post","count","log","alert","window","reload"],"sourceRoot":""}