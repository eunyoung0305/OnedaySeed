{"version":3,"file":"static/js/162.5603ea85.chunk.js","mappings":"mNAOA,MAgGA,EAhGsBA,KAClB,MAAOC,EAAMC,IAAYC,EAAAA,EAAAA,UAAS,CAAC,GAE7BC,EAAYC,UACd,IACI,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,kBACjCN,EAASI,EAASG,KACtB,CAAC,MAAOC,GACJC,QAAQC,IAAI,+BAAgCF,EAChD,IAGJG,EAAAA,EAAAA,YAAU,KACNT,GAAW,GACZ,IAGH,MAAMU,GAAWC,EAAAA,EAAAA,MAEXC,EAAqBC,IACvB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BlB,GAAUmB,IAAS,IACZA,EACH,CAACH,GAAOC,KACT,EAwCT,OACEG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAEAF,EAAAA,EAAAA,KAACG,EAAAA,EAAY,CAAAD,UACbE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUH,SAAA,EACjBF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,0BAEHE,EAAAA,EAAAA,MAACE,EAAAA,EAAI,CAACC,SA5CGxB,UAEjBY,EAAEa,iBAEF,IACI,MAAMxB,QAAiBC,EAAAA,EAAMwB,KAAK,iBAAiB,CAE/CC,QAAS/B,EAAM+B,QACfC,SAAUhC,EAAMgC,WAGhB3B,EAASG,KAAKyB,cAEdC,MAAM7B,EAASG,KAAKyB,cAGpB5B,EAASG,KAAK2B,iBACdzB,QAAQC,IAAI,+BAAgCN,EAASG,KAAK2B,gBAC1DhC,IACAU,EAAS,KAEjB,CAAE,MAAOJ,GACDA,EAAMJ,SAENK,QAAQD,MAAM,yBAA0BA,EAAMJ,SAASG,MAEhDC,EAAM2B,QAEb1B,QAAQD,MAAM,iBAAkBA,EAAM2B,SAGtC1B,QAAQD,MAAM,oBAAqBA,EAAM4B,QAEjD,GAWqCd,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,WAAUH,SAAC,oCAC3BF,EAAAA,EAAAA,KAAA,SAAOK,UAAU,WAAWY,KAAK,OAAOC,GAAG,SAAStB,KAAK,UAAUuB,SAAUzB,EAAmBG,MAAOlB,EAAM+B,QAASU,YAAY,+EAElIpB,EAAAA,EAAAA,KAAA,QAAMK,UAAU,WAAUH,SAAC,8BAC3BF,EAAAA,EAAAA,KAAA,SAAOK,UAAU,WAAWY,KAAK,WAAWC,GAAG,eAAetB,KAAK,WAAYuB,SAAUzB,EAAmBG,MAAOlB,EAAMgC,SAASS,YAAY,yEAElJpB,EAAAA,EAAAA,KAAA,OAAKK,UAAU,WAAUH,UACrBF,EAAAA,EAAAA,KAAA,UAAQK,UAAU,OAAOY,KAAK,SAAQf,SAAE,6BAI5CF,EAAAA,EAAAA,KAACqB,EAAAA,KAAI,CAACC,GAAI,cAAejB,UAAU,gBAAeH,SAAC,6DAErDF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,kBAAiBH,SAAC,qEAClCE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWH,SAAA,EACtBF,EAAAA,EAAAA,KAAA,UAAQK,UAAU,cAAaH,UAACF,EAAAA,EAAAA,KAACqB,EAAAA,KAAI,CAACC,GAAI,YAAYpB,SAAC,mDACvDF,EAAAA,EAAAA,KAAA,UAAQK,UAAU,cAAaH,UAACF,EAAAA,EAAAA,KAACqB,EAAAA,KAAI,CAACC,GAAI,YAAYpB,SAAC,2DAK9D,C","sources":["pages/login/HostLoginPage.js"],"sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\nimport BasicLaylout from \"../../layouts/BasicLayout\";\nimport \"./LoginForm.css\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\n\nconst HostLoginPage = () => {\n    const [login,setLogin] = useState({});\n\n    const fetchData = async()=>{\n        try{\n            const response = await axios.get(\"/api/hostLogin\");\n            setLogin(response.data);\n        }catch (error){\n            console.log('ERROR FETCHING HOST LOGIN : ', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchData()\n    }, []);\n\n\n    const navigate = useNavigate();\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setLogin((prevLogin) => ({\n            ...prevLogin,\n            [name]: value,\n        }));\n    };\n\n    const handleSubmit = async (e) =>{\n        // 새로고침 방지\n        e.preventDefault();\n\n        try{\n            const response = await axios.post(\"/api/hostLogin\",{\n\n                hostNum: login.hostNum,\n                password: login.password\n            });\n\n            if (response.data.alertMessage) {\n                // 에러 또는 성공 메시지가 있으면 alert 창 띄우기\n                alert(response.data.alertMessage);\n            }\n\n            if (response.data.successMessage) {\n                console.log('Form submitted successfully:', response.data.successMessage);\n                fetchData();\n                navigate(\"/\");\n            }\n        } catch (error) {\n            if (error.response) {\n                // 서버 응답이 에러인 경우\n                console.error('Error submitting form:', error.response.data);\n                // 클라이언트에서 에러 메시지 처리 로직 추가\n            } else if (error.request) {\n                // 요청이 전혀 이루어지지 않은 경우\n                console.error('Request error:', error.request);\n            } else {\n                // 기타 에러\n                console.error('Unexpected error:', error.message);\n            }\n        }\n\n    }\n\n  return(\n    <>\n\n    <BasicLaylout>\n    <div className=\"loginBox\">\n            <h1><b>로그인</b></h1>\n\n                <Form onSubmit={handleSubmit}>\n                <span className=\"formName\">사업자번호</span>\n                <input className=\"formInfo\" type=\"text\" id=\"id_val\" name=\"hostNum\" onChange={handleInputChange} value={login.hostNum} placeholder=\"사업자번호를 입력해주세요\" />\n\n                <span className=\"formName\">비밀번호</span>\n                <input className=\"formInfo\" type=\"password\" id=\"password_val\" name=\"password\"  onChange={handleInputChange} value={login.password}placeholder=\"비밀번호를 입력해주세요\"/>\n\n            <div className=\"loginBtn\">\n                <button className=\"s_bt\" type=\"submit\" >로그인</button>\n            </div>\n                </Form>\n\n            <Link to={\"/user/login\"} className=\"another-login\">게스트로 로그인하기</Link>\n\n          <span className=\"choiceNewmember\">아직 회원이 아니신가요?</span>\n          <div className=\"newmember\">\n              <button className=\"another-btn\"><Link to={\"/host/new\"}>호스트 회원가입</Link></button>\n              <button className=\"another-btn\"><Link to={\"/user/new\"}>게스트 회원가입</Link></button>\n          </div>\n\n          </div>\n     </BasicLaylout>\n    </>\n  )\n}\nexport default HostLoginPage;"],"names":["HostLoginPage","login","setLogin","useState","fetchData","async","response","axios","get","data","error","console","log","useEffect","navigate","useNavigate","handleInputChange","e","name","value","target","prevLogin","_jsx","_Fragment","children","BasicLaylout","_jsxs","className","Form","onSubmit","preventDefault","post","hostNum","password","alertMessage","alert","successMessage","request","message","type","id","onChange","placeholder","Link","to"],"sourceRoot":""}