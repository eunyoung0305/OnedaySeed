{"version":3,"file":"static/js/469.6ec6c3c7.chunk.js","mappings":"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","sources":["hooks/useCustomLogin.js","layouts/BasicLayout.js","pages/login/NewHostPage.js"],"sourcesContent":["import {createSearchParams, Navigate, useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loginPostAsync, logout} from \"../slices/loginSlice\";\n\nconst useCustomLogin = () => {\n\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const loginState = useSelector(state => state.loginSlice) //로그인,로그아웃 했을 경우의 상태\n    const isLogin = loginState.userId ?true :false //로그인 여부\n    const doLogin = async (loginParam) => { //로그인 함수\n        const action = await dispatch(loginPostAsync(loginParam))\n\n        return action.payload\n    }\n\n    const doLogout =() => { //로그아웃 함수\n        dispatch(logout())\n    }\n\n    const moveToPath = (path) =>{ //페이지 이동\n        navigate({pathname:path},{replace:true})\n    }\n\n    const moveToLogin = () => { //로그인페이지로 이동\n        navigate({pathname:'/user/login'},{replace:true})\n    }\n\n    const moveToLoginReturn = () => { //로그인페이지로 이동 페이지(로그인해야지만 이용 가능한 페이지 클릭(이동시))\n        return<Navigate replace to=\"/user/login\" />\n    }\n\n    const exceptionHandle = (ex) =>{\n        console.log(\"Exception..........\")\n        console.log(ex)\n        const errorMsg = ex.response.data.error\n        const errorStr = createSearchParams({error:errorMsg}).toString()\n\n        if(errorMsg === 'REQUIRE_LOGIN'){\n            alert(\"로그인을 진행해주세요!\")\n            navigate({pathname:'/user/login',search:errorStr})\n            return\n        }\n        if(ex.response.data.error === \"ERROR_ACCESSDENIED\"){\n            alert(\"해당 메뉴를 사용할 권한이 없습니다.\")\n            navigate({pathname:'/user/login',search:errorStr})\n            return\n        }\n    }\n\n    return{loginState, isLogin, doLogin, doLogout, moveToPath, moveToLogin, moveToLoginReturn, exceptionHandle}\n}\nexport default useCustomLogin;","import { Link } from \"react-router-dom\";\nimport \"./BasicLayout.css\"\nimport BasicMenu from \"../components/menus/BasicMenu.js\";\nimport {useSelector} from \"react-redux\";\nimport useCustomLogin from \"../hooks/useCustomLogin\";\n\nconst BasicLayout = ({children}) => {\n\n    const {doLogout, moveToPath} =useCustomLogin()\n\n const handleClickLogout =()=>{\n        doLogout()\n     alert(\"로그아웃되었습니다.\")\n     moveToPath(\"/\")\n }\n\n    const loginState = useSelector(state => state.loginSlice)\n  return(\n    <>\n    \n    <header>\n    <nav class=\"navbar navbar-expand-lg\" id=\"nav\" >\n    <div class=\"container-fluid\" id=\"nav-form\">\n      <a href={'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      < ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a href={'/about'} className=\"nav-link active\" aria-current=\"page\" >About Us</a>\n        </li>\n\n          {/*로그인한 사용자에게만 보이게*/}\n          {loginState.id ?\n          <>\n        <li class=\"nav-item\">\n          <a href={'/mypage'} className=\"nav-link\">My Page</a>\n        </li>\n      </>\n        :<></>}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          {loginState.id ?\n              <>\n                  <li className=\"nav-item\">\n                      <a onClick={handleClickLogout} className=\"nav-link\">Logout</a>\n                  </li>\n              </>\n              :<></>}\n\n\n\n        {/* 로그인 전 사용자에게 '로그인' 보이게 */}\n          { ! loginState.id?\n              <>\n        <li class=\"nav-item\">\n          <Link to={\"/user/login\"} className=\"nav-link disabled\" aria-disabled=\"true\" >Login</Link>\n        </li>\n              </>: <></> }\n\n          \n      </ul>\n      <form class=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">Search</button>\n      </form>\n    </div>\n  </div>\n </nav>\n <hr/>\n    </header>\n\n\n          <main>\n            {children}\n          </main>\n\n    <footer>\n    <hr/>\n      <div className=\"footer-body\">\n        <span><b>(주)원데이씨드</b> <br/>\n        <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br/>\n         사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br/>\n         </span> <br/>\n         <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\n        </span>\n        <br/><br/><br/><br/>\n      </div>   \n    </footer>\n\n\n    </>\n\n  )\n}\nexport default BasicLayout;","\nimport BasicLaylout from \"../../layouts/BasicLayout\";\nimport React, {useEffect, useState} from \"react\";\nimport \"./LoginForm.css\"\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\n\nconst NewHostPage = () =>{\n\n    const [newMember,setNewMember] = useState({});\n\n    const fetchData = async ()=> {\n        try{\n            const response = await axios.get(\"/api/hostNew\");\n            setNewMember(response.data)\n        }catch(error){\n            console.log(\"Error fetching new host info : \", error);\n        }\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setNewMember((prevNewMember) => ({\n            ...prevNewMember,\n            [name]: value,\n        }));\n    };\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault(); // 기본 폼 제출 방지\n\n        try {\n            const response = await axios.post(\"/api/hostNew\", {\n                hostNum: newMember.hostNum,\n                password: newMember.password,\n                name: newMember.name,\n                phoneNum: newMember.phoneNum,\n                // userRole:newMember.userRole\n            });\n\n            if (response.data.alertMessage) {\n                alert(response.data.alertMessage);\n            }\n            if (response.data.successMsg) {\n                console.log(\"'Form submitted successfully:', response.data.successMessage\");\n                fetchData();\n                setNewMember({});\n            }\n        }catch (error){\n            if(error.response){\n                // 서버 응답이 에러인 경우\n                console.error('Error submitting form:', error.response.data);\n            }else if (error.request) {\n                // 요청이 전혀 이루어지지 않은 경우\n                console.error('Request error:', error.request);\n            } else {\n                // 기타 에러\n                console.error('Unexpected error:', error.message);\n            }\n        }\n    };\n\n\n    \n    return(\n      <>\n      <BasicLaylout>\n      <div class=\"loginBox\">\n        <h1>회원가입</h1>\n        <Form onSubmit={handleSubmit}>\n            <span className=\"formName\">사업자번호</span>\n            <input className=\"formInfo\" type=\"text\" onChange={handleInputChange} value={newMember.hostNum} />\n       \n            <span className=\"formName\">비밀번호</span>\n            <input className=\"formInfo\" type=\"text\" onChange={handleInputChange} value={newMember.password}/>\n\n            <span className=\"formName\">상호명</span>\n            <input className=\"formInfo\" type=\"text\" onChange={handleInputChange} value={newMember.name}/>\n\n            <span className=\"formName\">전화번호</span>\n            <input className=\"formInfo\" type=\"text\" onChange={handleInputChange} value={newMember.phoneNum}/>\n        \n        <div className=\"loginBtn\">\n          <button type=\"submit\" >회원가입</button>\n        </div> \n      </Form>\n      \n      </div>\n      </BasicLaylout>\n      </>\n    )\n  }\n\nexport default NewHostPage;"],"names":["useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","userId","doLogin","async","loginPostAsync","loginParam","payload","doLogout","logout","moveToPath","path","pathname","replace","moveToLogin","moveToLoginReturn","_jsx","Navigate","to","exceptionHandle","ex","console","log","errorMsg","response","data","error","errorStr","createSearchParams","toString","alert","search","_ref","children","_jsxs","_Fragment","class","id","href","className","type","onClick","handleClickLogout","Link","role","placeholder","NewHostPage","newMember","setNewMember","useState","fetchData","axios","get","useEffect","handleInputChange","e","name","value","target","prevNewMember","BasicLaylout","Form","onSubmit","preventDefault","post","hostNum","password","phoneNum","alertMessage","successMsg","request","message","onChange"],"sourceRoot":""}