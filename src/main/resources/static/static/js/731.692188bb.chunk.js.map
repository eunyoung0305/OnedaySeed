{"version":3,"file":"static/js/731.692188bb.chunk.js","mappings":"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","sources":["layouts/BasicLayout.js","pages/login/UserLoginPage.js"],"sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\nimport \"./BasicLayout.css\"\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logout} from \"../slices/loginSlice\";\nimport { hostLogout }from \"../slices/hostLoginSlice\";\n\nconst BasicLayout = ({children}) => {\n\n        const navigate = useNavigate();\n        const dispatch = useDispatch()\n\n        const isLoggedIn = useSelector((state) => state.login.isLoggedIn);\n        const userId = useSelector((state) => state.login.userId);\n        const userName = useSelector((state) => state.login.userName);\n        // const userName22 = localStorage.getItem(\"userName\");\n\n        const isHostLoggedIn = useSelector((state) => state.hostLogin.isHostLoggedIn);\n        const hostNum = useSelector((state) => state.hostLogin.hostNum);\n        const hostName = useSelector((state) => state.hostLogin.hostName);\n\n        const handleClickLogout =()=>{\n             localStorage.removeItem(\"isLoggedIn\");\n             dispatch(logout());\n             navigate(\"/\");\n         }\n\n    const handleClickHostLogout =()=>{\n        localStorage.removeItem(\"isHostLoggedIn\");\n        dispatch(hostLogout());\n        navigate(\"/\");\n    }\n\n    return(\n    <>\n    \n    <header>\n    <nav className=\"navbar navbar-expand-lg\" id=\"nav\" >\n    <div className=\"container-fluid\" id=\"nav-form\">\n      <a href={'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      < ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a href={'/about'} className=\"nav-link active\" aria-current=\"page\" >About Us</a>\n        </li>\n\n\n\n          {/*   !가 붙어있어야 로그인전 화면에 노출 ! */}\n\n\n\n          {/* User */}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n          <>\n        <li className=\"nav-item\">\n          <a href={'/myPage'} className=\"nav-link\">My Page</a>\n        </li>\n       </>\n        :<></>}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickLogout}>Logout</a>\n                  </li>\n               </>\n              :<></>}\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n          <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" >\n                  {userName}님, 반가워요!\n              </a>\n          </li>\n              </>\n              :<></>}\n\n        {/* 로그인 전 사용자에게 '로그인' 보이게 */}\n          {( !isLoggedIn  &&  !isHostLoggedIn )?\n              <>\n        <li className=\"nav-item\">\n          <a href=\"/user/login\" className=\"nav-link\" >Login</a>\n        </li>\n              </>: <></>}\n\n\n          {/* Host */}\n\n\n\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href={'/host/myPage'} className=\"nav-link\">My Page</a>\n                  {/*    레슨 파일보고 페이지 맞게 연결*/}\n                  </li>\n              </>\n              :<></>}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          {/*{ isHostLoggedIn ?*/}\n          {/*    <>*/}\n          {/*        <li className=\"nav-item\">*/}\n          {/*            <a href={'/lesson/main'} className=\"nav-link\">My Class</a>*/}\n          {/*            /!*    레슨 파일보고 페이지 맞게 연결*!/*/}\n          {/*        </li>*/}\n          {/*    </>*/}\n          {/*    :<></>}*/}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickHostLogout}>Logout</a>\n                  </li>\n              </>\n              :<></>}\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a className=\"nav-link active\" aria-current=\"page\" >{hostName}님, 반가워요!</a>\n                  </li>\n           </>\n              :<></>}\n\n\n      </ul>\n      <form className=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">Search</button>\n      </form>\n    </div>\n  </div>\n </nav>\n <hr/>\n    </header>\n\n\n          <main>\n            {children}\n          </main>\n\n    <footer>\n    <hr/>\n      <div className=\"footer-body\">\n        <span><b>(주)원데이씨드</b> <br/>\n        <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br/>\n         사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br/>\n         </span> <br/>\n         <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\n        </span>\n        <br/><br/><br/><br/>\n      </div>   \n    </footer>\n\n\n    </>\n\n  )\n}\nexport default BasicLayout;","import {Link, useNavigate} from \"react-router-dom\";\nimport BasicLaylout from \"../../layouts/BasicLayout\";\nimport \"./LoginForm.css\"\nimport {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {login as loginAction} from \"../../slices/loginSlice\";\nimport {Form} from \"react-bootstrap\";\nimport axios from \"axios\";\n\n\n\nconst initState={\n    userId:\"\",\n    password:\"\"\n}\nconst UserLoginPage =()=>{\n\n    const [login,setLogin] = useState({...initState});\n\n    const isLoggedIn = useSelector((state) => state.login.isLoggedIn);\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const fetchData = async()=>{\n        try{\n            const response = await axios.get(\"/api/userLogin\");\n            setLogin(response.data);\n        }catch (error){\n            console.log('ERROR FETCHING USER LOGIN : ', error);\n        }\n    };\n\n    useEffect(() => {\n        const isLoggedIn = localStorage.getItem('isLoggedIn');\n        if (isLoggedIn) {\n            // 로그인 상태인 경우 홈페이지로 이동\n            navigate(\"/\");\n        }\n\n        const userName = localStorage.getItem(\"userName\");\n        if (userName) {\n            // 사용자 이름이 있다면, 로그인 폼에 설정\n            setLogin((prevLogin) => ({\n                ...prevLogin,\n                userName: userName\n            }));\n        }\n\n\n    }, [navigate]);\n\n\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setLogin((prevLogin) => ({\n            ...prevLogin,\n            [name]: value,\n        }));\n    };\n\n    // 서버로 사용자 ID 전송(마이페이지)\n    const sendUserIdToServer = async (userId) => {\n        try {\n          await axios.post(\"/api/sendUserId\", { userId });\n        } catch (error) {\n          console.error('서버로 사용자 ID 전송 실패:', error);\n        }\n      };\n\n      // 서버로 사용자 ID 전송(카트)\n      const sendUserIdToCart = async (userId) => {\n        try {\n          await axios.post(\"/api/cart/sendUserId\", { userId });\n        } catch (error) {\n          console.error('서버로 사용자 ID 전송 실패:', error);\n        }\n      };\n\n      // 서버로 사용자 ID 전송(오더)\n      const sendUserIdToOrder = async (userId) => {\n        try {\n          await axios.post(\"/api/order/sendUserId\", { userId });\n        } catch (error) {\n          console.error('서버로 사용자 ID 전송 실패:', error);\n        }\n      };\n\n    const handleSubmit = async (e) => {\n\n        // 새로고침 방지\n        e.preventDefault();\n\n        if (!login.userId) {\n            alert(\"아이디를 입력해주세요.\");\n            return;\n        }\n        if (!login.password) {\n            alert(\"비밀번호를 입력해주세요.\");\n            return;\n        }\n\n        // console.log(login.userId);\n        // console.log(login.password);\n\n        try {\n            const response = await axios.post(\"/api/userLogin\", {\n                userId: login.userId,\n                password: login.password\n\n            });\n\n            if (response.data.alertMessage) {\n                // 에러 또는 성공 메시지가 있으면 alert 창 띄우기\n                alert(response.data.alertMessage);\n            }\n\n            if (response.data.successMessage) {\n                console.log('Form submitted successfully:', response.data.successMessage);\n\n                const { userId, userName } = response.data;\n\n                // console.log(\"가지고 가는 유저 아이디와 이름 : \")\n                // console.log(userId,userName);\n\n                // 로그인 성공 - 서버로 사용자ID 전송\n                sendUserIdToServer(login.userId);\n                sendUserIdToCart(login.userId);\n                sendUserIdToOrder(login.userId);\n\n                localStorage.setItem(\"isLoggedIn\", true);\n                dispatch(loginAction({\n                    userId: login.userId,\n                    userName: login.userName, // userName 정보를 Redux 상태에 저장 , 해당 부분의 login은 현재페이지의 값 아닌가?\n                }));\n\n\n                navigate(\"/\");\n            }\n\n        } catch (error) {\n            if (error.response) {\n                // 서버 응답이 에러인 경우\n                console.error('Error submitting form:', error.response.data);\n                // 에러 메시지가 있는 경우, 해당 메시지를 alert 창에 표시\n                alert(JSON.stringify(error.response.data));\n                //글자 자르기\n                return;\n                // alert(error.response.data);\n                // 클라이언트에서 에러 메시지 처리 로직 추가\n            } else if (error.request) {\n                // 요청이 전혀 이루어지지 않은 경우\n                console.error('Request error:', error.request);\n            } else {\n                // 기타 에러\n                console.error('Unexpected error:', error.message);\n            }\n          }\n\n    }\n    return(\n      <>\n      <BasicLaylout>\n      <div className=\"loginBox\">\n        <h1><b>로그인</b></h1>\n\n            <Form onSubmit={handleSubmit}>\n            <span className=\"formName\">아이디</span>\n            <input className=\"formInfo\" type=\"text\" id=\"id_val\" placeholder=\"아이디를 입력해주세요\" name=\"userId\" value={login.userId} onChange={handleInputChange}></input>\n\n            <span className=\"formName\">비밀번호</span>\n            <input className=\"formInfo\" type=\"password\" id=\"password_val\" placeholder=\"비밀번호를 입력해주세요\" name=\"password\" value={login.password} onChange={handleInputChange}></input>\n\n\n\n          <div className=\"loginBtn\">\n           <button className=\"s_bt\" type=\"submit\" >로그인</button>\n            </div>\n\n            </Form>\n\n        <Link to={\"/host/login\"} className=\"another-login\">호스트로 로그인하기</Link>\n\n      <span className=\"choiceNewmember\">아직 회원이 아니신가요?</span>\n      <div className=\"newmember\">\n          <button className=\"another-btn\"><Link to={\"/host/new\"} >호스트 회원가입</Link></button>\n          <button className=\"another-btn\"><Link to={\"/user/new\"} >게스트 회원가입</Link></button>\n      </div>\n\n      </div>\n      </BasicLaylout>\n      </>\n    )\n\n}\nexport default UserLoginPage;\n\n"],"names":["_ref","children","navigate","useNavigate","dispatch","useDispatch","isLoggedIn","useSelector","state","login","userName","userId","isHostLoggedIn","hostLogin","hostName","hostNum","_jsxs","_Fragment","_jsx","className","id","href","type","onClick","handleClickLogout","localStorage","removeItem","logout","handleClickHostLogout","hostLogout","role","placeholder","initState","password","UserLoginPage","setLogin","useState","useEffect","getItem","prevLogin","handleInputChange","e","name","value","target","BasicLaylout","Form","onSubmit","async","preventDefault","response","axios","post","data","alertMessage","alert","successMessage","console","log","error","sendUserIdToServer","sendUserIdToCart","sendUserIdToOrder","setItem","loginAction","JSON","stringify","request","message","onChange","Link","to"],"sourceRoot":""}