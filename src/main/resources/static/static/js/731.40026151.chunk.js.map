{"version":3,"file":"static/js/731.40026151.chunk.js","mappings":"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","sources":["layouts/BasicLayout.js","pages/login/UserLoginPage.js"],"sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\nimport \"./BasicLayout.css\"\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logout} from \"../slices/loginSlice\";\n\nconst BasicLayout = ({children}) => {\n\n        const navigate = useNavigate();\n        const dispatch = useDispatch()\n\n        const isLoggedIn = useSelector((state) => state.login.isLoggedIn);\n        const userId = useSelector((state) => state.login.userId);\n\n        const isHostLoggedIn = useSelector((state) => state.login.isHostLoggedIn);\n        const hostNum = useSelector((state) => state.login.hostNum);\n\n        const handleClickLogout =()=>{\n             localStorage.removeItem(\"isLoggedIn\");\n             dispatch(logout());\n             navigate(\"/\");\n         }\n\n    const handleClickHostLogout =()=>{\n        localStorage.removeItem(\"isHostLoggedIn\");\n        dispatch(logout());\n        navigate(\"/\");\n    }\n\n    return(\n    <>\n    \n    <header>\n    <nav className=\"navbar navbar-expand-lg\" id=\"nav\" >\n    <div className=\"container-fluid\" id=\"nav-form\">\n      <a href={'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      < ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a href={'/about'} className=\"nav-link active\" aria-current=\"page\" >About Us</a>\n        </li>\n\n\n\n          {/*   !가 붙어있어야 로그인전 화면에 노출 ! */}\n\n\n\n          {/* User */}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n          <>\n        <li className=\"nav-item\">\n          <a href={'/myPage'} className=\"nav-link\">My Page</a>\n        </li>\n       </>\n        :<></>}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickLogout}>Logout</a>\n                  </li>\n               </>\n              :<></>}\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n          <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" >{userId}님, 반가워요!</a>\n          </li>\n              </>\n              :<></>}\n\n        {/* 로그인 전 사용자에게 '로그인' 보이게 */}\n        {/*  {!( isLoggedIn  ||  isHostLoggedIn )?*/}\n          {! isHostLoggedIn ?\n              <>\n        <li className=\"nav-item\">\n          <a href=\"/user/login\" className=\"nav-link\" >Login</a>\n        </li>\n              </>: <></>}\n\n\n          {/* Host */}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href={'/'} className=\"nav-link\">My Class</a> \n                  {/*    레슨 파일보고 페이지 맞게 연결*/}\n                  </li>\n              </>\n              :<></>}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickHostLogout}>Logout</a>\n                  </li>\n              </>\n              :<></>}\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a className=\"nav-link active\" aria-current=\"page\" >{hostNum}님, 반가워요!</a>\n                  </li>\n              </>\n              :<></>}\n\n\n      </ul>\n      <form className=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">Search</button>\n      </form>\n    </div>\n  </div>\n </nav>\n <hr/>\n    </header>\n\n\n          <main>\n            {children}\n          </main>\n\n    <footer>\n    <hr/>\n      <div className=\"footer-body\">\n        <span><b>(주)원데이씨드</b> <br/>\n        <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br/>\n         사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br/>\n         </span> <br/>\n         <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\n        </span>\n        <br/><br/><br/><br/>\n      </div>   \n    </footer>\n\n\n    </>\n\n  )\n}\nexport default BasicLayout;","import {Link, useNavigate} from \"react-router-dom\";\nimport BasicLaylout from \"../../layouts/BasicLayout\";\nimport \"./LoginForm.css\"\nimport {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {login as loginAction} from \"../../slices/loginSlice\";\nimport {Form} from \"react-bootstrap\";\nimport axios from \"axios\";\n\n\n\nconst initState={\n    userId:\"\",\n    password:\"\"\n}\nconst UserLoginPage =()=>{\n\n    const [login,setLogin] = useState({...initState});\n\n    const isLoggedIn = useSelector((state) => state.login.isLoggedIn);\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const fetchData = async()=>{\n        try{\n            const response = await axios.get(\"/api/userLogin\");\n            setLogin(response.data);\n        }catch (error){\n            console.log('ERROR FETCHING USER LOGIN : ', error);\n        }\n    };\n\n    useEffect(() => {\n        const isLoggedIn = localStorage.getItem('isLoggedIn');\n        if (isLoggedIn) {\n            // 로그인 상태인 경우 홈페이지로 이동\n            navigate(\"/\");\n        }\n    }, [navigate]);\n\n\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setLogin((prevLogin) => ({\n            ...prevLogin,\n            [name]: value,\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n\n        // 새로고침 방지\n        e.preventDefault();\n\n        // console.log(login.userId);\n        // console.log(login.password);\n\n\n        try {\n            const response = await axios.post(\"/api/userLogin\", {\n                userId: login.userId,\n                password: login.password\n\n            });\n\n            if (response.data.alertMessage) {\n                // 에러 또는 성공 메시지가 있으면 alert 창 띄우기\n                alert(response.data.alertMessage);\n            }\n\n            if (response.data.successMessage) {\n                console.log('Form submitted successfully:', response.data.successMessage);\n                console.log(login.userId.userName);\n\n                localStorage.setItem(\"isLoggedIn\", true);\n                dispatch(loginAction({ userId: login.userId }));\n\n                navigate(\"/\");\n\n\n            }\n        } catch (error) {\n            if (error.response) {\n                // 서버 응답이 에러인 경우\n                console.error('Error submitting form:', error.response.data);\n                // 클라이언트에서 에러 메시지 처리 로직 추가\n            } else if (error.request) {\n                // 요청이 전혀 이루어지지 않은 경우\n                console.error('Request error:', error.request);\n            } else {\n                // 기타 에러\n                console.error('Unexpected error:', error.message);\n            }\n          }\n\n    }\n    return(\n      <>\n      <BasicLaylout>\n      <div className=\"loginBox\">\n        <h1><b>로그인</b></h1>\n\n            <Form onSubmit={handleSubmit}>\n            <span className=\"formName\">아이디</span>\n            <input className=\"formInfo\" type=\"text\" id=\"id_val\" placeholder=\"아이디를 입력해주세요\" name=\"userId\" value={login.userId} onChange={handleInputChange}></input>\n\n            <span className=\"formName\">비밀번호</span>\n            <input className=\"formInfo\" type=\"password\" id=\"password_val\" placeholder=\"비밀번호를 입력해주세요\" name=\"password\" value={login.password} onChange={handleInputChange}></input>\n\n\n\n          <div className=\"loginBtn\">\n           <button className=\"s_bt\" type=\"submit\" >로그인</button>\n            </div>\n\n            </Form>\n\n        <Link to={\"/host/login\"} className=\"another-login\">호스트로 로그인하기</Link>\n\n      <span className=\"choiceNewmember\">아직 회원이 아니신가요?</span>\n      <div className=\"newmember\">\n          <button className=\"another-btn\"><Link to={\"/host/new\"} >호스트 회원가입</Link></button>\n          <button className=\"another-btn\"><Link to={\"/user/new\"} >게스트 회원가입</Link></button>\n      </div>\n\n      </div>\n      </BasicLaylout>\n      </>\n    )\n\n}\nexport default UserLoginPage;\n\n"],"names":["_ref","children","navigate","useNavigate","dispatch","useDispatch","isLoggedIn","useSelector","state","login","userId","isHostLoggedIn","hostNum","_jsxs","_Fragment","_jsx","className","id","href","type","onClick","handleClickLogout","localStorage","removeItem","logout","handleClickHostLogout","role","placeholder","initState","password","UserLoginPage","setLogin","useState","useEffect","getItem","handleInputChange","e","name","value","target","prevLogin","BasicLaylout","Form","onSubmit","async","preventDefault","response","axios","post","data","alertMessage","alert","successMessage","console","log","userName","setItem","loginAction","error","request","message","onChange","Link","to"],"sourceRoot":""}