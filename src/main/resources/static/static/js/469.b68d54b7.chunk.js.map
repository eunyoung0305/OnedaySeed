{"version":3,"file":"static/js/469.b68d54b7.chunk.js","mappings":"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","sources":["layouts/BasicLayout.js","pages/login/NewHostPage.js"],"sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\nimport \"./BasicLayout.css\"\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logout} from \"../slices/loginSlice\";\nimport { hostLogout }from \"../slices/hostLoginSlice\";\nimport {useState} from \"react\";\n\nconst BasicLayout = ({children}) => {\n\n        const navigate = useNavigate();\n        const dispatch = useDispatch()\n\n        const isLoggedIn = useSelector((state) => state.login.isLoggedIn);\n        const userId = useSelector((state) => state.login.userId);\n        const userName = useSelector((state) => state.login.userName);\n        // const userName22 = localStorage.getItem(\"userName\");\n\n        const isHostLoggedIn = useSelector((state) => state.hostLogin.isHostLoggedIn);\n        const hostNum = useSelector((state) => state.hostLogin.hostNum);\n        const hostName = useSelector((state) => state.hostLogin.hostName);\n\n        const [searchValue, setSearchValue] = useState(\"\");\n\n        const handleClickLogout =()=>{\n             localStorage.removeItem(\"isLoggedIn\");\n             dispatch(logout());\n             navigate(\"/\");\n         }\n\n    const handleClickHostLogout =()=>{\n        localStorage.removeItem(\"isHostLoggedIn\");\n        dispatch(hostLogout());\n        navigate(\"/\");\n    }\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        if (!searchValue.trim()) {\n            alert('검색어를 입력해주세요.');\n            return;\n        }\n        navigate(`/lesson/list?q=${searchValue.trim()}`);\n    };\n\n    return(\n    <>\n    \n    <header>\n    <nav className=\"navbar navbar-expand-lg\" id=\"nav\" >\n    <div className=\"container-fluid\" id=\"nav-form\">\n      <a href={'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      < ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a href={'/about'} className=\"nav-link active\" aria-current=\"page\" >About Us</a>\n        </li>\n\n          {/*   !가 붙어있어야 로그인전 화면에 노출 ! */}\n\n          {/* User */}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n          <>\n        <li className=\"nav-item\">\n          <a href={'/myPage'} className=\"nav-link\">My Page</a>\n        </li>\n       </>\n        :<></>}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickLogout}>Logout</a>\n                  </li>\n               </>\n              :<></>}\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n          <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" >\n                  {userId}님, 반가워요!\n              </a>\n          </li>\n              </>\n              :<></>}\n\n        {/* 로그인 전 사용자에게 '로그인' 보이게 */}\n          {( !isLoggedIn  &&  !isHostLoggedIn )?\n              <>\n        <li className=\"nav-item\">\n          <a href=\"/user/login\" className=\"nav-link\" >Login</a>\n        </li>\n              </>: <></>}\n\n\n          {/* Host */}\n\n\n\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href={'/host/myPage'} className=\"nav-link\">My Page</a>\n                  {/*    레슨 파일보고 페이지 맞게 연결*/}\n                  </li>\n              </>\n              :<></>}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickHostLogout}>Logout</a>\n                  </li>\n              </>\n              :<></>}\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a className=\"nav-link active\" aria-current=\"page\" >{hostNum}님, 반가워요!</a>\n                  </li>\n           </>\n              :<></>}\n\n      </ul>\n      <form className=\"d-flex\" role=\"search\" onSubmit={handleSearch}>\n        <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" value={searchValue} onChange={(e) => setSearchValue(e.target.value)}/>\n        <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">Search</button>\n      </form>\n    </div>\n  </div>\n </nav>\n <hr/>\n    </header>\n\n          <main>\n            {children}\n          </main>\n\n    <footer>\n    <hr/>\n      <div className=\"footer-body\">\n        <span><b>(주)원데이씨드</b> <br/>\n        <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br/>\n         사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br/>\n         </span> <br/>\n         <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\n        </span>\n        <br/><br/><br/><br/>\n      </div>   \n    </footer>\n\n\n    </>\n\n  )\n}\nexport default BasicLayout;","import BasicLaylout from \"../../layouts/BasicLayout\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./LoginForm.css\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NewHostPage = () => {\n    const [newMember, setNewMember] = useState({\n        hostNum: \"\",\n        password: \"\",\n        hostName: \"\",\n        phoneNum: \"\",\n    });\n\n    const [isLicenseChecked, setIsLicenseChecked] = useState(false); // 사업자등록번호 확인 여부 상태 변수 추가\n\n    const navigate = useNavigate();\n\n    const fetchData = async ()=> {\n        try{\n            const response = await axios.get(\"/api/hostNew\");\n            setNewMember(response.data)\n        }catch(error){\n            console.log(\"Error fetching new host info : \", error);\n        }\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n        setNewMember((prevNewMember) => ({\n            ...prevNewMember,\n            [name]: value,\n        }));\n    };\n    const handleSubmit = async (e) => {\n        e.preventDefault(); // 기본 폼 제출 방지\n\n        if (!newMember.hostNum) {\n            alert(\"사업자번호를 입력해주세요.\");\n            return;\n        }\n\n        if (!/^\\d{10}$/.test(newMember.hostNum)) {\n            alert(\"사업자번호는 숫자 10자리로 입력해주세요.\");\n            return;\n        }\n\n        if (!newMember.password) {\n            alert(\"비밀번호를 입력해주세요.\");\n            return;\n        }\n\n        if (newMember.password.length < 6 || newMember.password.length > 12) {\n            alert(\"비밀번호는 6자리 이상 12자리 이하로 입력해주세요.\");\n            return;\n        }\n\n        if (!newMember.hostName) {\n            alert(\"상호명을 입력해주세요.\");\n            return;\n        }\n\n        if (!newMember.phoneNum) {\n            alert(\"전화번호를 입력해주세요.\");\n            return;\n        }\n\n        if (!/^\\d+$/.test(newMember.phoneNum)) {\n            alert(\"전화번호는 숫자만 입력해주세요.\");\n            return;\n        }\n        if (!isLicenseChecked) { // 사업자등록번호 확인 여부 체크\n            alert(\"사업자등록번호 조회를 해주세요.\"); // 알림 메시지 표시\n            return;\n        }\n\n        try {\n            const response = await axios.post(\"/api/hostNew\", {\n                hostNum: newMember.hostNum,\n                password: newMember.password,\n                hostName: newMember.hostName,\n                phoneNum: newMember.phoneNum,\n            });\n\n            if (response.data.alertMessage) {\n                alert(response.data.alertMessage);\n            }\n            if (response.data.successMessage) {\n                console.log('Form submitted successfully:', response.data.successMessage);\n\n                const{hostNum, hostName} =  response.data;\n                localStorage.setItem(\"hostName\", newMember.hostName); // 사용자 이름을 로컬 스토리지에 저장\n                fetchData();\n\n                navigate(\"/host/login\");\n            }\n        }catch (error){\n            if(error.response){\n                // 서버 응답이 에러인 경우\n                console.error('Error submitting form:', error.response.data);\n                console.log(\"에러\");\n            }else if (error.request) {\n                // 요청이 전혀 이루어지지 않은 경우\n                console.error('Request error:', error.request);\n                console.log(\"에러\");\n            } else {\n                // 기타 에러\n                console.error('Unexpected error:', error.message);\n                console.log(\"에러\");\n            }\n        }\n    };\n\n    const handleCheckLicenseNumber = async () => {\n        try {\n            const licenseNumber = newMember.hostNum;\n            const data = { b_no: [licenseNumber] };\n\n            const serviceKey = \"jNJwXhsGE%2BR4ssYCiosHjGYR%2FzyXPcxd0kTjAMRluKEZ7UNjAf0G37HlXVE5YGQBs5LgDaSfEdI1K%2F%2B3%2Buf1rQ%3D%3D\";\n            const url = `https://api.odcloud.kr/api/nts-businessman/v1/status?serviceKey=${serviceKey}`;\n\n            const response = await axios.post(url, data, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Accept: \"application/json\",\n                },\n            });\n\n            const statusCd = response.data.data[0].b_stt_cd;\n            const licenseNo = response.data.data[0].b_no;\n\n            if (statusCd === '01') {\n                setIsLicenseChecked(true); // 사업자등록번호 확인 완료 상태 업데이트\n                alert(`사업자등록번호 ${licenseNo} 는(은) 정상 사업자입니다.`);\n            } else {\n                setIsLicenseChecked(false); // 사업자등록번호 확인 완료 상태 업데이트\n                alert(`사업자등록번호 ${licenseNo} 는(은) 유효하지 않은 사업자등록번호입니다.`);\n                setNewMember((prevNewMember) => ({\n                    ...prevNewMember,\n                    hostNum: \"\",\n                }));\n            }\n        } catch (error) {\n            console.error(\"Error checking license number:\", error);\n            console.log(\"에러 발생\");\n        }\n    };\n\n    return (\n        <>\n            <BasicLaylout>\n                <div className=\"loginBox\">\n                    <h1>\n                        <b>회원가입</b>\n                    </h1>\n                    <Form onSubmit={handleSubmit}>\n\n                        <span className=\"formName\">사업자번호</span>\n                        <div className=\"hostNumBox\">\n                            <input className=\"formInfo\"\n\n                                   type=\"text\"\n                                   placeholder=\"사업자번호를 입력해주세요\"\n                                   name=\"hostNum\"\n                                   onChange={handleInputChange}\n                                   value={newMember.hostNum}\n                            />\n                            <button type=\"button\" className=\"checkButton\" onClick={handleCheckLicenseNumber}>\n                                사업자번호 확인\n                            </button>\n                        </div>\n                        <span className=\"formName\">비밀번호</span>\n                        <input\n                            className=\"formInfo\"\n                            type=\"password\"\n                            placeholder=\"비밀번호를 입력해주세요\"\n                            name=\"password\"\n                            onChange={handleInputChange}\n                            value={newMember.password}\n                        />\n\n                        <span className=\"formName\">상호명</span>\n                        <input\n                            className=\"formInfo\"\n                            type=\"text\"\n                            placeholder=\"상호명을 입력해주세요\"\n                            name=\"hostName\"\n                            onChange={handleInputChange}\n                            value={newMember.hostName}\n                        />\n\n                        <span className=\"formName\">전화번호</span>\n                        <input\n                            className=\"formInfo\"\n                            type=\"text\"\n                            placeholder=\"전화번호를 입력해주세요\"\n                            name=\"phoneNum\"\n                            onChange={handleInputChange}\n                            value={newMember.phoneNum}\n                        />\n\n                        <div className=\"loginBtn\">\n                            <button type=\"submit\">회원가입</button>\n                        </div>\n                    </Form>\n                </div>\n            </BasicLaylout>\n        </>\n    );\n};\n\nexport default NewHostPage;\n"],"names":["_ref","children","navigate","useNavigate","dispatch","useDispatch","isLoggedIn","useSelector","state","login","userId","isHostLoggedIn","userName","hostLogin","hostNum","searchValue","setSearchValue","hostName","useState","_jsxs","_Fragment","_jsx","className","id","href","type","onClick","handleClickLogout","localStorage","removeItem","logout","handleClickHostLogout","hostLogout","role","onSubmit","e","preventDefault","trim","concat","alert","placeholder","value","onChange","target","NewHostPage","newMember","setNewMember","password","phoneNum","isLicenseChecked","setIsLicenseChecked","fetchData","async","response","axios","get","data","error","console","log","useEffect","handleInputChange","name","prevNewMember","BasicLaylout","Form","test","length","post","alertMessage","successMessage","setItem","request","message","b_no","url","headers","Accept","statusCd","b_stt_cd","licenseNo"],"sourceRoot":""}