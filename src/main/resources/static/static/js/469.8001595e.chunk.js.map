{"version":3,"file":"static/js/469.8001595e.chunk.js","mappings":"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","sources":["pages/login/NewHostPage.js"],"sourcesContent":["\nimport BasicLaylout from \"../../layouts/BasicLayout\";\nimport React, {useEffect, useState} from \"react\";\nimport \"./LoginForm.css\"\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst NewHostPage = () =>{\n\n    const [newMember,setNewMember] = useState({});\n\n    const fetchData = async ()=> {\n        try{\n            const response = await axios.get(\"/api/hostNew\");\n            setNewMember(response.data)\n        }catch(error){\n            console.log(\"Error fetching new host info : \", error);\n        }\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const navigate = useNavigate();\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n\n\n\n\n        setNewMember((prevNewMember) => ({\n            ...prevNewMember,\n            [name]: value,\n        }));\n    };\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault(); // 기본 폼 제출 방지\n\n        if (newMember.hostNum == null) {\n            alert(\"사업자번호를 입력해주세요.\");\n            return;\n        }\n        if (!/^\\d{10}$/.test(newMember.hostNum)) {\n            alert(\"사업자번호는 숫자 10자리로 입력해주세요.\");\n            return;\n        }\n        if (newMember.password == null) {\n            alert(\"비밀번호를 입력해주세요.\");\n            return;\n        }\n        if (newMember.password.length < 6 || newMember.password.length > 12) {\n            alert(\"비밀번호는 6자리 이상 12자리 이하로 입력해주세요.\");\n            return;\n        }\n\n        if (newMember.hostName == null) {\n            alert(\"상호명을 입력해주세요.\");\n            return;\n        }\n        if (newMember.phoneNum == null) {\n            alert(\"전화번호를 입력해주세요.\");\n            return;\n        }\n        if (!/^\\d+$/.test(newMember.phoneNum)) {\n            alert(\"전화번호는 숫자만 입력해주세요.\");\n            return;\n        }\n\n\n\n        console.log(newMember.hostNum);\n        console.log(newMember.password);\n        console.log(newMember.hostName);\n        console.log(newMember.phoneNum);\n\n        try {\n            const response = await axios.post(\"/api/hostNew\", {\n                hostNum: newMember.hostNum,\n                password: newMember.password,\n                hostName: newMember.hostName,\n                phoneNum: newMember.phoneNum,\n            });\n\n            if (response.data.alertMessage) {\n                alert(response.data.alertMessage);\n            }\n            if (response.data.successMessage) {\n                console.log('Form submitted successfully:', response.data.successMessage);\n                fetchData();\n\n                navigate(\"/host/login\");\n            }\n        }catch (error){\n            if(error.response){\n                // 서버 응답이 에러인 경우\n                console.error('Error submitting form:', error.response.data);\n                console.log(\"에러\");\n            }else if (error.request) {\n                // 요청이 전혀 이루어지지 않은 경우\n                console.error('Request error:', error.request);\n                console.log(\"에러\");\n            } else {\n                // 기타 에러\n                console.error('Unexpected error:', error.message);\n                console.log(\"에러\");\n            }\n        }\n    };\n\n\n    \n    return(\n      <>\n      <BasicLaylout>\n      <div class=\"loginBox\">\n        <h1><b>회원가입</b></h1>\n        <Form onSubmit={handleSubmit}>\n            <span className=\"formName\">사업자번호</span>\n            <input className=\"formInfo\" type=\"text\" placeholder=\"사업자번호를 입력해주세요\" name=\"hostNum\" onChange={handleInputChange} value={newMember.hostNum} />\n       \n            <span className=\"formName\">비밀번호</span>\n            <input className=\"formInfo\" type=\"password\" placeholder=\"비밀번호를 입력해주세요\" name=\"password\" onChange={handleInputChange} value={newMember.password}/>\n\n            <span className=\"formName\">상호명</span>\n            <input className=\"formInfo\" type=\"text\" placeholder=\"상호명을 입력해주세요\" name=\"hostName\" onChange={handleInputChange} value={newMember.hostName}/>\n\n            <span className=\"formName\">전화번호</span>\n            <input className=\"formInfo\" type=\"text\" placeholder=\"전화번호를 입력해주세요\" name=\"phoneNum\" onChange={handleInputChange} value={newMember.phoneNum}/>\n        \n        <div className=\"loginBtn\">\n          <button type=\"submit\" >회원가입</button>\n        </div> \n      </Form>\n      \n      </div>\n      </BasicLaylout>\n      </>\n    )\n  }\n\nexport default NewHostPage;"],"names":["NewHostPage","newMember","setNewMember","useState","fetchData","async","response","axios","get","data","error","console","log","useEffect","navigate","useNavigate","handleInputChange","e","name","value","target","prevNewMember","_jsx","_Fragment","children","BasicLaylout","_jsxs","class","Form","onSubmit","preventDefault","hostNum","test","password","length","alert","hostName","phoneNum","post","alertMessage","successMessage","request","message","className","type","placeholder","onChange"],"sourceRoot":""}