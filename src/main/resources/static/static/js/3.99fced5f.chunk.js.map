{"version":3,"file":"static/js/3.99fced5f.chunk.js","mappings":"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","sources":["layouts/BasicLayout.js","pages/login/NewUserPage.js"],"sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\nimport \"./BasicLayout.css\"\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logout} from \"../slices/loginSlice\";\n\nconst BasicLayout = ({children}) => {\n        const navigate = useNavigate();\n\n        const dispatch = useDispatch()\n\n        const loginState = useSelector((state)=>state.loginSlice)\n       // const {doLogout, moveToPath} =useCustomLogin()\n       //  const userId = loginState.userId ? `Welcome, ${loginState.userId}` : 'Welcome';\n    const userId = loginState && loginState.userId ? `Welcome, ${loginState.userId}` : 'Welcome';\n    const handleClickLogout =()=>{\n             localStorage.removeItem(\"isLoggedIn\");\n             // localStorage.removeItem(\"userId\");\n             dispatch(logout());\n             navigate(\"/user/login\");\n         }\n    // const handleClickLogin =()=>{\n    //     //    doLogout()\n    //     // alert(\"로그아웃되었습니다.\")\n    //     // moveToPath(\"/\")\n    //     // dispatch(login())\n    //     }e\n\n\n    // const handleClickLogout =()=>{\n    //     localStorage.removeItem('isLoggedIn');\n    //     navigate(\"/\");\n    //\n    // }\n\n\n    return(\n    <>\n    \n    <header>\n    <nav className=\"navbar navbar-expand-lg\" id=\"nav\" >\n    <div className=\"container-fluid\" id=\"nav-form\">\n      <a href={'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      < ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a href={'/about'} className=\"nav-link active\" aria-current=\"page\" >About Us</a>\n        </li>\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { loginState.userId ?\n          <>\n        <li className=\"nav-item\">\n          <a href={'/mypage'} className=\"nav-link\">My Page</a>\n        </li>\n       </>\n        :<></>}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          {loginState.userId ?\n              <>\n                  <li className=\"nav-item\">\n                      <a  className=\"nav-link active\" aria-current=\"page\" onClick={handleClickLogout}>Logout</a>\n                  </li>\n               </>\n              :<></>}\n          {/*로그인한 사용자에게만 보이게*/}\n          {loginState.userId ?\n              <>\n          <li className=\"nav-item\">\n              <a href=\"/user/login\" className=\"nav-link active\" aria-current=\"page\" >{userId}</a>\n          </li>\n              </>\n              :<></>}\n\n        {/* 로그인 전 사용자에게 '로그인' 보이게 */}\n          { ! loginState.userId?\n              <>\n        <li className=\"nav-item\">\n          <a href=\"/user/login\" className=\"nav-link active\" aria-current=\"page\" >Login</a>\n        </li>\n              </>: <></>}\n      </ul>\n      <form className=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">Search</button>\n      </form>\n    </div>\n  </div>\n </nav>\n <hr/>\n    </header>\n\n\n          <main>\n            {children}\n          </main>\n\n    <footer>\n    <hr/>\n      <div className=\"footer-body\">\n        <span><b>(주)원데이씨드</b> <br/>\n        <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br/>\n         사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br/>\n         </span> <br/>\n         <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\n        </span>\n        <br/><br/><br/><br/>\n      </div>   \n    </footer>\n\n\n    </>\n\n  )\n}\nexport default BasicLayout;","import BasicLaylout from \"../../layouts/BasicLayout\";\nimport React, {useEffect, useState} from \"react\";\nimport \"./LoginForm.css\"\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport {useNavigate} from \"react-router-dom\";\n\n\nconst NewUserPage=()=>{\n\n    const [newMember,setNewMember] = useState({});\n\n    const fetchData = async ()=> {\n        try{\n            const response = await axios.get(\"/api/userNew\");\n            setNewMember(response.data)\n        }catch(error){\n            console.log(\"Error fetching new user info : \", error);\n        }\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n\n    const navigate = useNavigate();\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n\n\n\n\n\n        setNewMember((prevNewMember) => ({\n            ...prevNewMember,\n            [name]: value,\n        }));\n    };\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault(); // 기본 폼 제출 방지\n\n\n        if (newMember.userId == null) {\n            alert(\"아이디를 입력해주세요.\");\n            return;\n        }\n        if (newMember.userId.length < 6 || newMember.userId.length > 12) {\n            alert(\"아이디는 6자리 이상 12자리 이하로 입력해주세요.\");\n            return;\n        }\n        if (newMember.password == null) {\n            alert(\"비밀번호를 입력해주세요.\");\n            return;\n        }\n        if (newMember.password.length < 6 || newMember.password.length > 12) {\n            alert(\"비밀번호는 6자리 이상 12자리 이하로 입력해주세요.\");\n            return;\n        }\n\n        if (newMember.userName == null) {\n            alert(\"이름을 입력해주세요.\");\n            return;\n        }\n        if (newMember.phoneNum == null) {\n            alert(\"전화번호를 입력해주세요.\");\n            return;\n        }\n        if (!/^\\d+$/.test(newMember.phoneNum)) {\n            alert(\"전화번호는 숫자만 입력해주세요.\");\n            return;\n        }\n\n\n\n        console.log(newMember.userId);\n        console.log(newMember.password);\n        console.log(newMember.userName);\n        console.log(newMember.phoneNum);\n\n        try {\n            const response = await axios.post(\"/api/userNew\", {\n                userId: newMember.userId,\n                password: newMember.password,\n                userName: newMember.userName,\n                phoneNum: newMember.phoneNum,\n\n            })\n            if (response.data.alertMessage) {\n                alert(response.data.alertMessage);\n            }\n            if (response.data.successMessage) {\n                console.log('Form submitted successfully:', response.data.successMessage);\n                fetchData();\n                navigate(\"/user/login\");\n            }\n        }catch (error){\n            if(error.response){\n                // 서버 응답이 에러인 경우\n                console.error('Error submitting form:', error.response.data);\n            }else if (error.request) {\n                // 요청이 전혀 이루어지지 않은 경우\n                console.error('Request error:', error.request);\n            } else {\n                // 기타 에러\n                console.error('Unexpected error:', error.message);\n            }\n        }\n    };\n\n\n\n\n    return(\n      <BasicLaylout>\n\n      <div className=\"loginBox\">\n        <h1><b>회원가입</b></h1>\n          <Form onSubmit={handleSubmit}>\n            <span className=\"formName\">아이디</span>\n            <input className=\"formInfo\" type=\"text\" id=\"id_val\" placeholder=\"아이디를 입력해주세요\"  name=\"userId\" onChange={handleInputChange} value={newMember.userId}/>\n       \n            <span className=\"formName\">비밀번호</span>\n            <input className=\"formInfo\" type=\"password\" id=\"password_val\" placeholder=\"비밀번호를 입력해주세요\" name=\"password\" onChange={handleInputChange} value={newMember.password}/>\n\n            <span className=\"formName\" >이름</span>\n            <input className=\"formInfo\" type=\"text\" id=\"name_val\" placeholder=\"이름을 입력해주세요\" name=\"userName\" onChange={handleInputChange} value={newMember.userName} />\n\n            <span className=\"formName\">전화번호</span>\n          <input className=\"formInfo\" type=\"text\" id=\"phoneNum_val\" placeholder=\"전화번호를 입력해주세요\" name=\"phoneNum\" onChange={handleInputChange} value={newMember.phoneNum}/>\n\n          <div className=\"loginBtn\">\n              <button type=\"submit\">회원가입</button>\n          </div>\n          </Form>\n      </div>\n      </BasicLaylout>\n      \n    );\n    }\nexport default NewUserPage;"],"names":["_ref","children","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","userId","concat","_jsxs","_Fragment","_jsx","className","id","href","type","onClick","handleClickLogout","localStorage","removeItem","logout","role","placeholder","NewUserPage","newMember","setNewMember","useState","fetchData","async","response","axios","get","data","error","console","log","useEffect","handleInputChange","e","name","value","target","prevNewMember","BasicLaylout","Form","onSubmit","preventDefault","length","alert","password","userName","phoneNum","test","post","alertMessage","successMessage","request","message","onChange"],"sourceRoot":""}