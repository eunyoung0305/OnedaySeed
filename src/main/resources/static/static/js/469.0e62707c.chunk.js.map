{"version":3,"file":"static/js/469.0e62707c.chunk.js","mappings":"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","sources":["layouts/BasicLayout.js","pages/login/NewHostPage.js"],"sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\nimport \"./BasicLayout.css\"\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logout} from \"../slices/loginSlice\";\nimport { hostLogout }from \"../slices/hostLoginSlice\";\n\nconst BasicLayout = ({children}) => {\n\n        const navigate = useNavigate();\n        const dispatch = useDispatch()\n\n        const isLoggedIn = useSelector((state) => state.login.isLoggedIn);\n        const userId = useSelector((state) => state.login.userId);\n        const userName = useSelector((state) => state.login.userName);\n        // const userName22 = localStorage.getItem(\"userName\");\n\n        const isHostLoggedIn = useSelector((state) => state.hostLogin.isHostLoggedIn);\n        const hostNum = useSelector((state) => state.hostLogin.hostNum);\n        const hostName = useSelector((state) => state.hostLogin.hostName);\n\n        const handleClickLogout =()=>{\n             localStorage.removeItem(\"isLoggedIn\");\n             dispatch(logout());\n             navigate(\"/\");\n         }\n\n    const handleClickHostLogout =()=>{\n        localStorage.removeItem(\"isHostLoggedIn\");\n        dispatch(hostLogout());\n        navigate(\"/\");\n    }\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        const searchInput = document.getElementById('search-input');\n        const searchValue = searchInput.value.trim();\n        if (searchValue !== '') {\n            navigate(`/lesson/list?q=${searchValue}`);\n        }\n    };\n\n    return(\n    <>\n    \n    <header>\n    <nav className=\"navbar navbar-expand-lg\" id=\"nav\" >\n    <div className=\"container-fluid\" id=\"nav-form\">\n      <a href={'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      < ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a href={'/about'} className=\"nav-link active\" aria-current=\"page\" >About Us</a>\n        </li>\n\n\n\n          {/*   !가 붙어있어야 로그인전 화면에 노출 ! */}\n\n\n\n          {/* User */}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n          <>\n        <li className=\"nav-item\">\n          <a href={'/myPage'} className=\"nav-link\">My Page</a>\n        </li>\n       </>\n        :<></>}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickLogout}>Logout</a>\n                  </li>\n               </>\n              :<></>}\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n          <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" >\n                  {userId}님, 반가워요!\n              </a>\n          </li>\n              </>\n              :<></>}\n\n        {/* 로그인 전 사용자에게 '로그인' 보이게 */}\n          {( !isLoggedIn  &&  !isHostLoggedIn )?\n              <>\n        <li className=\"nav-item\">\n          <a href=\"/user/login\" className=\"nav-link\" >Login</a>\n        </li>\n              </>: <></>}\n\n\n          {/* Host */}\n\n\n\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href={'/host/myPage'} className=\"nav-link\">My Page</a>\n                  {/*    레슨 파일보고 페이지 맞게 연결*/}\n                  </li>\n              </>\n              :<></>}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          {/*{ isHostLoggedIn ?*/}\n          {/*    <>*/}\n          {/*        <li className=\"nav-item\">*/}\n          {/*            <a href={'/lesson/main'} className=\"nav-link\">My Class</a>*/}\n          {/*            /!*    레슨 파일보고 페이지 맞게 연결*!/*/}\n          {/*        </li>*/}\n          {/*    </>*/}\n          {/*    :<></>}*/}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickHostLogout}>Logout</a>\n                  </li>\n              </>\n              :<></>}\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a className=\"nav-link active\" aria-current=\"page\" >{hostNum}님, 반가워요!</a>\n                  </li>\n           </>\n              :<></>}\n\n\n      </ul>\n      <form className=\"d-flex\" role=\"search\" onSubmit={handleSearch}>\n        <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">Search</button>\n      </form>\n    </div>\n  </div>\n </nav>\n <hr/>\n    </header>\n\n\n          <main>\n            {children}\n          </main>\n\n    <footer>\n    <hr/>\n      <div className=\"footer-body\">\n        <span><b>(주)원데이씨드</b> <br/>\n        <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br/>\n         사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br/>\n         </span> <br/>\n         <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\n        </span>\n        <br/><br/><br/><br/>\n      </div>   \n    </footer>\n\n\n    </>\n\n  )\n}\nexport default BasicLayout;","//\n// import BasicLaylout from \"../../layouts/BasicLayout\";\n// import React, {useEffect, useState} from \"react\";\n// import \"./LoginForm.css\"\n// import axios from \"axios\";\n// import Form from \"react-bootstrap/Form\";\n// import {useNavigate} from \"react-router-dom\";\n//\n// const NewHostPage = () =>{\n//\n//     const [newMember,setNewMember] = useState({\n//         hostNum:\"\",\n//         password:\"\",\n//         hostName:\"\",\n//         phoneNum:\"\",\n//\n//     });\n//\n//     const fetchData = async ()=> {\n//         try{\n//             const response = await axios.get(\"/api/hostNew\");\n//             setNewMember(response.data)\n//         }catch(error){\n//             console.log(\"Error fetching new host info : \", error);\n//         }\n//     }\n//\n//     useEffect(() => {\n//         fetchData();\n//     }, []);\n//\n//     const navigate = useNavigate();\n//\n//     const handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//\n//         setNewMember((prevNewMember) => ({\n//             ...prevNewMember,\n//             [name]: value,\n//         }));\n//     };\n//\n//\n//     const handleSubmit = async (e) => {\n//         e.preventDefault(); // 기본 폼 제출 방지\n//\n//         if (newMember.hostNum == null) {\n//             alert(\"사업자번호를 입력해주세요.\");\n//             return;\n//         }\n//         if (!/^\\d{10}$/.test(newMember.hostNum)) {\n//             alert(\"사업자번호는 숫자 10자리로 입력해주세요.\");\n//             return;\n//         }\n//         if (newMember.password == null) {\n//             alert(\"비밀번호를 입력해주세요.\");\n//             return;\n//         }\n//         if (newMember.password.length < 6 || newMember.password.length > 12) {\n//             alert(\"비밀번호는 6자리 이상 12자리 이하로 입력해주세요.\");\n//             return;\n//         }\n//\n//         if (newMember.hostName == null) {\n//             alert(\"상호명을 입력해주세요.\");\n//             return;\n//         }\n//         if (newMember.phoneNum == null) {\n//             alert(\"전화번호를 입력해주세요.\");\n//             return;\n//         }\n//         if (!/^\\d+$/.test(newMember.phoneNum)) {\n//             alert(\"전화번호는 숫자만 입력해주세요.\");\n//             return;\n//         }\n//\n//         // console.log(newMember.hostNum);\n//         // console.log(newMember.password);\n//         // console.log(newMember.hostName);\n//         // console.log(newMember.phoneNum);\n//\n//         try {\n//             const response = await axios.post(\"/api/hostNew\", {\n//                 hostNum: newMember.hostNum,\n//                 password: newMember.password,\n//                 hostName: newMember.hostName,\n//                 phoneNum: newMember.phoneNum,\n//             });\n//\n//             if (response.data.alertMessage) {\n//                 alert(response.data.alertMessage);\n//             }\n//             if (response.data.successMessage) {\n//                 console.log('Form submitted successfully:', response.data.successMessage);\n//\n//                 const{hostNum, hostName} =  response.data;\n//                 localStorage.setItem(\"hostName\", newMember.hostName); // 사용자 이름을 로컬 스토리지에 저장\n//                 fetchData();\n//\n//                 navigate(\"/host/login\");\n//             }\n//         }catch (error){\n//             if(error.response){\n//                 // 서버 응답이 에러인 경우\n//                 console.error('Error submitting form:', error.response.data);\n//                 console.log(\"에러\");\n//             }else if (error.request) {\n//                 // 요청이 전혀 이루어지지 않은 경우\n//                 console.error('Request error:', error.request);\n//                 console.log(\"에러\");\n//             } else {\n//                 // 기타 에러\n//                 console.error('Unexpected error:', error.message);\n//                 console.log(\"에러\");\n//             }\n//         }\n//     };\n//\n//\n//\n//     return(\n//       <>\n//       <BasicLaylout>\n//       <div class=\"loginBox\">\n//         <h1><b>회원가입</b></h1>\n//         <Form onSubmit={handleSubmit}>\n//             <span className=\"formName\">사업자번호</span>\n//             <input className=\"formInfo\" type=\"text\" placeholder=\"사업자번호를 입력해주세요\" name=\"hostNum\" onChange={handleInputChange} value={newMember.hostNum} />\n//\n//             <span className=\"formName\">비밀번호</span>\n//             <input className=\"formInfo\" type=\"password\" placeholder=\"비밀번호를 입력해주세요\" name=\"password\" onChange={handleInputChange} value={newMember.password}/>\n//\n//             <span className=\"formName\">상호명</span>\n//             <input className=\"formInfo\" type=\"text\" placeholder=\"상호명을 입력해주세요\" name=\"hostName\" onChange={handleInputChange} value={newMember.hostName}/>\n//\n//             <span className=\"formName\">전화번호</span>\n//             <input className=\"formInfo\" type=\"text\" placeholder=\"전화번호를 입력해주세요\" name=\"phoneNum\" onChange={handleInputChange} value={newMember.phoneNum}/>\n//\n//         <div className=\"loginBtn\">\n//           <button type=\"submit\" >회원가입</button>\n//         </div>\n//       </Form>\n//\n//       </div>\n//       </BasicLaylout>\n//       </>\n//     )\n//   }\n//\n// export default NewHostPage;\n\n\n\nimport BasicLaylout from \"../../layouts/BasicLayout\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./LoginForm.css\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NewHostPage = () => {\n    const [newMember, setNewMember] = useState({\n        hostNum: \"\",\n        password: \"\",\n        hostName: \"\",\n        phoneNum: \"\",\n    });\n\n    const [isLicenseChecked, setIsLicenseChecked] = useState(false); // 사업자등록번호 확인 여부 상태 변수 추가\n\n    const navigate = useNavigate();\n\n    const fetchData = async ()=> {\n        try{\n            const response = await axios.get(\"/api/hostNew\");\n            setNewMember(response.data)\n        }catch(error){\n            console.log(\"Error fetching new host info : \", error);\n        }\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n        setNewMember((prevNewMember) => ({\n            ...prevNewMember,\n            [name]: value,\n        }));\n    };\n    const handleSubmit = async (e) => {\n        e.preventDefault(); // 기본 폼 제출 방지\n\n        if (!newMember.hostNum) {\n            alert(\"사업자번호를 입력해주세요.\");\n            return;\n        }\n\n        if (!/^\\d{10}$/.test(newMember.hostNum)) {\n            alert(\"사업자번호는 숫자 10자리로 입력해주세요.\");\n            return;\n        }\n\n        if (!newMember.password) {\n            alert(\"비밀번호를 입력해주세요.\");\n            return;\n        }\n\n        if (newMember.password.length < 6 || newMember.password.length > 12) {\n            alert(\"비밀번호는 6자리 이상 12자리 이하로 입력해주세요.\");\n            return;\n        }\n\n        if (!newMember.hostName) {\n            alert(\"상호명을 입력해주세요.\");\n            return;\n        }\n\n        if (!newMember.phoneNum) {\n            alert(\"전화번호를 입력해주세요.\");\n            return;\n        }\n\n        if (!/^\\d+$/.test(newMember.phoneNum)) {\n            alert(\"전화번호는 숫자만 입력해주세요.\");\n            return;\n        }\n        if (!isLicenseChecked) { // 사업자등록번호 확인 여부 체크\n            alert(\"사업자등록번호 조회를 해주세요.\"); // 알림 메시지 표시\n            return;\n        }\n\n        try {\n            const response = await axios.post(\"/api/hostNew\", {\n                hostNum: newMember.hostNum,\n                password: newMember.password,\n                hostName: newMember.hostName,\n                phoneNum: newMember.phoneNum,\n            });\n\n            if (response.data.alertMessage) {\n                alert(response.data.alertMessage);\n            }\n            if (response.data.successMessage) {\n                console.log('Form submitted successfully:', response.data.successMessage);\n\n                const{hostNum, hostName} =  response.data;\n                localStorage.setItem(\"hostName\", newMember.hostName); // 사용자 이름을 로컬 스토리지에 저장\n                fetchData();\n\n                navigate(\"/host/login\");\n            }\n        }catch (error){\n            if(error.response){\n                // 서버 응답이 에러인 경우\n                console.error('Error submitting form:', error.response.data);\n                console.log(\"에러\");\n            }else if (error.request) {\n                // 요청이 전혀 이루어지지 않은 경우\n                console.error('Request error:', error.request);\n                console.log(\"에러\");\n            } else {\n                // 기타 에러\n                console.error('Unexpected error:', error.message);\n                console.log(\"에러\");\n            }\n        }\n    };\n\n    const handleCheckLicenseNumber = async () => {\n        try {\n            const licenseNumber = newMember.hostNum;\n            const data = { b_no: [licenseNumber] };\n\n            const serviceKey = \"jNJwXhsGE%2BR4ssYCiosHjGYR%2FzyXPcxd0kTjAMRluKEZ7UNjAf0G37HlXVE5YGQBs5LgDaSfEdI1K%2F%2B3%2Buf1rQ%3D%3D\";\n            const url = `https://api.odcloud.kr/api/nts-businessman/v1/status?serviceKey=${serviceKey}`;\n\n            const response = await axios.post(url, data, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Accept: \"application/json\",\n                },\n            });\n\n            const statusCd = response.data.data[0].b_stt_cd;\n            const licenseNo = response.data.data[0].b_no;\n\n            if (statusCd === '01') {\n                setIsLicenseChecked(true); // 사업자등록번호 확인 완료 상태 업데이트\n                alert(`사업자등록번호 ${licenseNo} 는(은) 정상 사업자입니다.`);\n            } else {\n                setIsLicenseChecked(false); // 사업자등록번호 확인 완료 상태 업데이트\n                alert(`사업자등록번호 ${licenseNo} 는(은) 유효하지 않은 사업자등록번호입니다.`);\n                setNewMember((prevNewMember) => ({\n                    ...prevNewMember,\n                    hostNum: \"\",\n                }));\n            }\n        } catch (error) {\n            console.error(\"Error checking license number:\", error);\n            console.log(\"에러 발생\");\n        }\n    };\n\n    return (\n        <>\n            <BasicLaylout>\n                <div className=\"loginBox\">\n                    <h1>\n                        <b>회원가입</b>\n                    </h1>\n                    <Form onSubmit={handleSubmit}>\n\n                        <span className=\"formName\">사업자번호</span>\n                        <div className=\"hostNumBox\">\n                            <input className=\"formInfo\"\n\n                                   type=\"text\"\n                                   placeholder=\"사업자번호를 입력해주세요\"\n                                   name=\"hostNum\"\n                                   onChange={handleInputChange}\n                                   value={newMember.hostNum}\n                            />\n                            <button type=\"button\" className=\"checkButton\" onClick={handleCheckLicenseNumber}>\n                                사업자번호 확인\n                            </button>\n                        </div>\n                        <span className=\"formName\">비밀번호</span>\n                        <input\n                            className=\"formInfo\"\n                            type=\"password\"\n                            placeholder=\"비밀번호를 입력해주세요\"\n                            name=\"password\"\n                            onChange={handleInputChange}\n                            value={newMember.password}\n                        />\n\n                        <span className=\"formName\">상호명</span>\n                        <input\n                            className=\"formInfo\"\n                            type=\"text\"\n                            placeholder=\"상호명을 입력해주세요\"\n                            name=\"hostName\"\n                            onChange={handleInputChange}\n                            value={newMember.hostName}\n                        />\n\n                        <span className=\"formName\">전화번호</span>\n                        <input\n                            className=\"formInfo\"\n                            type=\"text\"\n                            placeholder=\"전화번호를 입력해주세요\"\n                            name=\"phoneNum\"\n                            onChange={handleInputChange}\n                            value={newMember.phoneNum}\n                        />\n\n                        <div className=\"loginBtn\">\n                            <button type=\"submit\">회원가입</button>\n                        </div>\n                    </Form>\n                </div>\n            </BasicLaylout>\n        </>\n    );\n};\n\nexport default NewHostPage;\n"],"names":["_ref","children","navigate","useNavigate","dispatch","useDispatch","isLoggedIn","useSelector","state","login","userId","isHostLoggedIn","userName","hostLogin","hostNum","hostName","_jsxs","_Fragment","_jsx","className","id","href","type","onClick","handleClickLogout","localStorage","removeItem","logout","handleClickHostLogout","hostLogout","role","onSubmit","e","preventDefault","searchValue","document","getElementById","value","trim","concat","placeholder","NewHostPage","newMember","setNewMember","useState","password","phoneNum","isLicenseChecked","setIsLicenseChecked","fetchData","async","response","axios","get","data","error","console","log","useEffect","handleInputChange","name","target","prevNewMember","BasicLaylout","Form","test","length","alert","post","alertMessage","successMessage","setItem","request","message","onChange","b_no","url","headers","Accept","statusCd","b_stt_cd","licenseNo"],"sourceRoot":""}