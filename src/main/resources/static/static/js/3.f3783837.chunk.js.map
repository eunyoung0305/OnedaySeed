{"version":3,"file":"static/js/3.f3783837.chunk.js","mappings":"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","sources":["pages/login/NewUserPage.js"],"sourcesContent":["import BasicLaylout from \"../../layouts/BasicLayout\";\nimport React, {useEffect, useState} from \"react\";\nimport \"./LoginForm.css\"\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport {useNavigate} from \"react-router-dom\";\n\n\nconst NewUserPage=()=>{\n\n    const [newMember,setNewMember] = useState({});\n\n    const fetchData = async ()=> {\n        try{\n            const response = await axios.get(\"/api/userNew\");\n            setNewMember(response.data)\n        }catch(error){\n            console.log(\"Error fetching new user info : \", error);\n        }\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n\n    const navigate = useNavigate();\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n\n\n\n\n\n        setNewMember((prevNewMember) => ({\n            ...prevNewMember,\n            [name]: value,\n        }));\n    };\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault(); // 기본 폼 제출 방지\n\n\n        if (newMember.userId == null) {\n            alert(\"아이디를 입력해주세요.\");\n            return;\n        }\n        if (newMember.userId.length < 6 || newMember.userId.length > 12) {\n            alert(\"아이디는 6자리 이상 12자리 이하로 입력해주세요.\");\n            return;\n        }\n        if (newMember.password == null) {\n            alert(\"비밀번호를 입력해주세요.\");\n            return;\n        }\n        if (newMember.password.length < 6 || newMember.password.length > 12) {\n            alert(\"비밀번호는 6자리 이상 12자리 이하로 입력해주세요.\");\n            return;\n        }\n\n        if (newMember.userName == null) {\n            alert(\"이름을 입력해주세요.\");\n            return;\n        }\n        if (newMember.phoneNum == null) {\n            alert(\"전화번호를 입력해주세요.\");\n            return;\n        }\n        if (!/^\\d+$/.test(newMember.phoneNum)) {\n            alert(\"전화번호는 숫자만 입력해주세요.\");\n            return;\n        }\n\n\n\n        console.log(newMember.userId);\n        console.log(newMember.password);\n        console.log(newMember.userName);\n        console.log(newMember.phoneNum);\n\n        try {\n            const response = await axios.post(\"/api/userNew\", {\n                userId: newMember.userId,\n                password: newMember.password,\n                userName: newMember.userName,\n                phoneNum: newMember.phoneNum,\n\n            })\n            if (response.data.alertMessage) {\n                alert(response.data.alertMessage);\n            }\n            if (response.data.successMessage) {\n                console.log('Form submitted successfully:', response.data.successMessage);\n                fetchData();\n                navigate(\"/user/login\");\n            }\n        }catch (error){\n            if(error.response){\n                // 서버 응답이 에러인 경우\n                console.error('Error submitting form:', error.response.data);\n            }else if (error.request) {\n                // 요청이 전혀 이루어지지 않은 경우\n                console.error('Request error:', error.request);\n            } else {\n                // 기타 에러\n                console.error('Unexpected error:', error.message);\n            }\n        }\n    };\n\n\n\n\n    return(\n      <BasicLaylout>\n\n      <div className=\"loginBox\">\n        <h1><b>회원가입</b></h1>\n          <Form onSubmit={handleSubmit}>\n            <span className=\"formName\">아이디</span>\n            <input className=\"formInfo\" type=\"text\" id=\"id_val\" placeholder=\"아이디를 입력해주세요\"  name=\"userId\" onChange={handleInputChange} value={newMember.userId}/>\n       \n            <span className=\"formName\">비밀번호</span>\n            <input className=\"formInfo\" type=\"password\" id=\"password_val\" placeholder=\"비밀번호를 입력해주세요\" name=\"password\" onChange={handleInputChange} value={newMember.password}/>\n\n            <span className=\"formName\" >이름</span>\n            <input className=\"formInfo\" type=\"text\" id=\"name_val\" placeholder=\"이름을 입력해주세요\" name=\"userName\" onChange={handleInputChange} value={newMember.userName} />\n\n            <span className=\"formName\">전화번호</span>\n          <input className=\"formInfo\" type=\"text\" id=\"phoneNum_val\" placeholder=\"전화번호를 입력해주세요\" name=\"phoneNum\" onChange={handleInputChange} value={newMember.phoneNum}/>\n\n          <div className=\"loginBtn\">\n              <button type=\"submit\">회원가입</button>\n          </div>\n          </Form>\n      </div>\n      </BasicLaylout>\n      \n    );\n    }\nexport default NewUserPage;"],"names":["NewUserPage","newMember","setNewMember","useState","fetchData","async","response","axios","get","data","error","console","log","useEffect","navigate","useNavigate","handleInputChange","e","name","value","target","prevNewMember","_jsx","BasicLaylout","children","_jsxs","className","Form","onSubmit","preventDefault","userId","length","alert","password","userName","phoneNum","test","post","alertMessage","successMessage","request","message","type","id","placeholder","onChange"],"sourceRoot":""}