{"version":3,"file":"static/js/469.54891bec.chunk.js","mappings":"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","sources":["hooks/useCustomLogin.js","layouts/BasicLayout.js","pages/login/NewHostPage.js"],"sourcesContent":["import {createSearchParams, Navigate, useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loginPostAsync, logout} from \"../slices/loginSlice\";\n\nconst useCustomLogin = () => {\n\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const loginState = useSelector(state => state.loginSlice) //로그인,로그아웃 했을 경우의 상태\n    const isLogin = loginState.userId ?true :false //로그인 여부\n    const doLogin = async (loginParam) => { //로그인 함수\n        const action = await dispatch(loginPostAsync(loginParam))\n\n        return action.payload\n    }\n\n    const doLogout =() => { //로그아웃 함수\n        dispatch(logout())\n    }\n\n    const moveToPath = (path) =>{ //페이지 이동\n        navigate({pathname:path},{replace:true})\n    }\n\n    const moveToLogin = () => { //로그인페이지로 이동\n        navigate({pathname:'/user/login'},{replace:true})\n    }\n\n    const moveToLoginReturn = () => { //로그인페이지로 이동 페이지(로그인해야지만 이용 가능한 페이지 클릭(이동시))\n        return<Navigate replace to=\"/user/login\" />\n    }\n\n    const exceptionHandle = (ex) =>{\n        console.log(\"Exception..........\")\n        console.log(ex)\n        const errorMsg = ex.response.data.error\n        const errorStr = createSearchParams({error:errorMsg}).toString()\n\n        if(errorMsg === 'REQUIRE_LOGIN'){\n            alert(\"로그인을 진행해주세요!\")\n            navigate({pathname:'/user/login',search:errorStr})\n            return\n        }\n        if(ex.response.data.error === \"ERROR_ACCESSDENIED\"){\n            alert(\"해당 메뉴를 사용할 권한이 없습니다.\")\n            navigate({pathname:'/user/login',search:errorStr})\n            return\n        }\n    }\n\n    return{loginState, isLogin, doLogin, doLogout, moveToPath, moveToLogin, moveToLoginReturn, exceptionHandle}\n}\nexport default useCustomLogin;","import { Link } from \"react-router-dom\";\nimport \"./BasicLayout.css\"\n\nimport {useSelector} from \"react-redux\";\nimport useCustomLogin from \"../hooks/useCustomLogin\";\n\nconst BasicLayout = ({children}) => {\n\n    const {doLogout, moveToPath} =useCustomLogin()\n\n const handleClickLogout =()=>{\n        doLogout()\n     alert(\"로그아웃되었습니다.\")\n     moveToPath(\"/\")\n }\n\n    const loginState = useSelector(state => state.loginSlice)\n  return(\n    <>\n    \n    <header>\n    <nav className=\"navbar navbar-expand-lg\" id=\"nav\" >\n    <div className=\"container-fluid\" id=\"nav-form\">\n      <a href={'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      < ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a href={'/about'} className=\"nav-link active\" aria-current=\"page\" >About Us</a>\n        </li>\n\n          {/* 로그인한 사용자에게만 보이게\n          {loginState.id ?\n          <> */}\n        <li className=\"nav-item\">\n          <a href={'/mypage'} className=\"nav-link\">My Page</a>\n        </li>\n      {/* </>\n        :<></>} */}\n\n          {/* 로그인한 사용자에게만 보이게\n          {loginState.id ?\n              <> */}\n                  <li className=\"nav-item\">\n                      <a className=\"nav-link\">Logout</a>\n                  </li>\n              {/* </>\n              :<></>} */}\n\n\n\n        {/* 로그인 전 사용자에게 '로그인' 보이게 */}\n          { ! loginState.id?\n              <>\n        <li class=\"nav-item\">\n          <a href={\"/user/login\"} className=\"nav-link disabled\" aria-disabled=\"true\" >Login</a>\n        </li>\n              </>: <></> }\n      </ul>\n      <form className=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">Search</button>\n      </form>\n    </div>\n  </div>\n </nav>\n <hr/>\n    </header>\n\n\n          <main>\n            {children}\n          </main>\n\n    <footer>\n    <hr/>\n      <div className=\"footer-body\">\n        <span><b>(주)원데이씨드</b> <br/>\n        <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br/>\n         사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br/>\n         </span> <br/>\n         <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\n        </span>\n        <br/><br/><br/><br/>\n      </div>   \n    </footer>\n\n\n    </>\n\n  )\n}\nexport default BasicLayout;","\nimport BasicLaylout from \"../../layouts/BasicLayout\";\nimport React, {useEffect, useState} from \"react\";\nimport \"./LoginForm.css\"\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst NewHostPage = () =>{\n\n    const [newMember,setNewMember] = useState({});\n\n    const fetchData = async ()=> {\n        try{\n            const response = await axios.get(\"/api/hostNew\");\n            setNewMember(response.data)\n        }catch(error){\n            console.log(\"Error fetching new host info : \", error);\n        }\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const navigate = useNavigate();\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n\n\n\n\n        setNewMember((prevNewMember) => ({\n            ...prevNewMember,\n            [name]: value,\n        }));\n    };\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault(); // 기본 폼 제출 방지\n\n        if (newMember.hostNum == null) {\n            alert(\"사업자번호를 입력해주세요.\");\n            return;\n        }\n        if (!/^\\d{10}$/.test(newMember.hostNum)) {\n            alert(\"사업자번호는 숫자 10자리로 입력해주세요.\");\n            return;\n        }\n        if (newMember.password == null) {\n            alert(\"비밀번호를 입력해주세요.\");\n            return;\n        }\n        if (newMember.password.length < 6 || newMember.password.length > 12) {\n            alert(\"비밀번호는 6자리 이상 16자리 이하로 입력해주세요.\");\n            return;\n        }\n\n        if (newMember.hostName == null) {\n            alert(\"상호명을 입력해주세요.\");\n            return;\n        }\n        if (newMember.phoneNum == null) {\n            alert(\"전화번호를 입력해주세요.\");\n            return;\n        }\n        if (!/^\\d+$/.test(newMember.phoneNum)) {\n            alert(\"전화번호는 숫자만 입력해주세요.\");\n            return;\n        }\n\n\n\n        console.log(newMember.hostNum);\n        console.log(newMember.password);\n        console.log(newMember.hostName);\n        console.log(newMember.phoneNum);\n\n        try {\n            const response = await axios.post(\"/api/hostNew\", {\n                hostNum: newMember.hostNum,\n                password: newMember.password,\n                hostName: newMember.hostName,\n                phoneNum: newMember.phoneNum,\n            });\n\n            if (response.data.alertMessage) {\n                alert(response.data.alertMessage);\n            }\n            if (response.data.successMessage) {\n                console.log('Form submitted successfully:', response.data.successMessage);\n                fetchData();\n\n                navigate(\"/host/login\");\n            }\n        }catch (error){\n            if(error.response){\n                // 서버 응답이 에러인 경우\n                console.error('Error submitting form:', error.response.data);\n                console.log(\"에러\");\n            }else if (error.request) {\n                // 요청이 전혀 이루어지지 않은 경우\n                console.error('Request error:', error.request);\n                console.log(\"에러\");\n            } else {\n                // 기타 에러\n                console.error('Unexpected error:', error.message);\n                console.log(\"에러\");\n            }\n        }\n    };\n\n\n    \n    return(\n      <>\n      <BasicLaylout>\n      <div class=\"loginBox\">\n        <h1><b>회원가입</b></h1>\n        <Form onSubmit={handleSubmit}>\n            <span className=\"formName\">사업자번호</span>\n            <input className=\"formInfo\" type=\"text\" placeholder=\"사업자번호를 입력해주세요\" name=\"hostNum\" onChange={handleInputChange} value={newMember.hostNum} />\n       \n            <span className=\"formName\">비밀번호</span>\n            <input className=\"formInfo\" type=\"password\" placeholder=\"비밀번호를 입력해주세요\" name=\"password\" onChange={handleInputChange} value={newMember.password}/>\n\n            <span className=\"formName\">상호명</span>\n            <input className=\"formInfo\" type=\"text\" placeholder=\"상호명을 입력해주세요\" name=\"hostName\" onChange={handleInputChange} value={newMember.hostName}/>\n\n            <span className=\"formName\">전화번호</span>\n            <input className=\"formInfo\" type=\"text\" placeholder=\"전화번호를 입력해주세요\" name=\"phoneNum\" onChange={handleInputChange} value={newMember.phoneNum}/>\n        \n        <div className=\"loginBtn\">\n          <button type=\"submit\" >회원가입</button>\n        </div> \n      </Form>\n      \n      </div>\n      </BasicLaylout>\n      </>\n    )\n  }\n\nexport default NewHostPage;"],"names":["useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","userId","doLogin","async","loginPostAsync","loginParam","payload","doLogout","logout","moveToPath","path","pathname","replace","moveToLogin","moveToLoginReturn","_jsx","Navigate","to","exceptionHandle","ex","console","log","errorMsg","response","data","error","errorStr","createSearchParams","toString","alert","search","_ref","children","_jsxs","_Fragment","className","id","href","type","class","role","placeholder","NewHostPage","newMember","setNewMember","useState","fetchData","axios","get","useEffect","handleInputChange","e","name","value","target","prevNewMember","BasicLaylout","Form","onSubmit","preventDefault","hostNum","test","password","length","hostName","phoneNum","post","alertMessage","successMessage","request","message","onChange"],"sourceRoot":""}